<?php
/**
 * {{interfaceNamePrefix}}{{classname}}{{interfaceNameSuffix}}
 * PHP version 8.1
 *
 * @package  {{invokerPackage}}
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

{{>partial_header}}
/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace {{apiPackage}};

use InvalidArgumentException;
use GuzzleHttp\Psr7\Request;
use GuzzleHttp\Promise\PromiseInterface;
use {{invokerPackage}}\ApiException;
use {{invokerPackage}}\Configuration;

/**
 * {{classname}} Class Doc Comment
 *
 * @package  {{invokerPackage}}
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
{{#operations}}interface {{interfaceNamePrefix}}{{classname}}{{interfaceNameSuffix}}
{
    /** @var string[] $contentTypes **/
    public const contentTypes = [{{#operation}}
        '{{{operationId}}}' => [{{#consumes}}
            '{{{mediaType}}}',{{/consumes}}
        {{^consumes}}
            'application/json',
{{/consumes}}        ],{{/operation}}
    ];

    /**
     * Set the host index
     *
     * @param int $hostIndex Host index (required)
     */
    public function setHostIndex(int $hostIndex): void;

    /**
     * Get the host index
     *
     * @return int Host index
     */
    public function getHostIndex(): int;

    /**
     * @return Configuration
     */
    public function getConfig(): Configuration;

{{#operation}}
    /**
     * Operation {{{operationId}}}
{{#summary}}
     *
     * {{.}}
{{/summary}}
     *
{{#description}}
     * {{.}}
     *
{{/description}}
{{#vendorExtensions.x-group-parameters}}
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
{{/vendorExtensions.x-group-parameters}}
{{#servers}}
{{#-first}}
     * This operation contains host(s) defined in the OpenAPI spec. Use 'hostIndex' to select the host.
     * if needed, use the 'variables' parameter to pass variables to the host.
{{/-first}}
     * URL: {{{url}}}
{{#variables}}
{{#-first}}
     *  Variables:
{{/-first}}
     *    - {{{name}}}: {{{description}}}{{^description}} No description provided{{/description}}{{#enumValues}}
{{#-first}}
     *      Allowed values:
{{/-first}}
     *        - {{{.}}}{{/enumValues}}
{{/variables}}
{{#-last}}
     *
{{/-last}}
{{/servers}}
{{#allParams}}
     * @param  {{{dataType}}}{{^required}}|null{{/required}} ${{paramName}}{{#description}} {{.}}{{/description}}{{^description}} {{paramName}}{{/description}} {{#required}}(required){{/required}}{{^required}}(optional{{#defaultValue}}, default to {{{.}}}{{/defaultValue}}){{/required}}{{#isDeprecated}} (deprecated){{/isDeprecated}}
{{/allParams}}
{{#servers}}
{{#-first}}
     * @param  null|int $hostIndex Host index. Defaults to null. If null, then the library will use $this->hostIndex instead
     * @param  array $variables Associative array of variables to pass to the host. Defaults to empty array.
{{/-first}}
{{/servers}}
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['{{{operationId}}}'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return {{#returnType}}{{#responses}}{{#dataType}}{{^-first}}|{{/-first}}{{/dataType}}{{{dataType}}}{{/responses}}{{/returnType}}{{^returnType}}void{{/returnType}}
    {{#isDeprecated}}
     * @deprecated
    {{/isDeprecated}}
     */
    public function {{operationId}}(
    {{^vendorExtensions.x-group-parameters}}
    {{#allParams}}
        {{^required}}?{{/required}}{{vendorExtensions.x-php-param-type}} ${{paramName}}{{^required}} = {{#defaultValue}}{{{.}}}{{/defaultValue}}{{^defaultValue}}null{{/defaultValue}}{{/required}},
    {{/allParams}}
    {{#servers}}
    {{#-first}}
        ?int $hostIndex = null,
        array $variables = [],
    {{/-first}}
    {{/servers}}
        string $contentType = self::contentTypes['{{{operationId}}}'][0]
    {{/vendorExtensions.x-group-parameters}}
    {{#vendorExtensions.x-group-parameters}}
        array $associative_array
    {{/vendorExtensions.x-group-parameters}}
    ): {{{vendorExtensions.x-php-return-type}}};

    /**
     * Operation {{{operationId}}}WithHttpInfo
{{#summary}}
     *
     * {{.}}
{{/summary}}
     *
{{#description}}
     * {{.}}
     *
{{/description}}
{{#vendorExtensions.x-group-parameters}}
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
{{/vendorExtensions.x-group-parameters}}
{{#servers}}
{{#-first}}
     * This operation contains host(s) defined in the OpenAPI spec. Use 'hostIndex' to select the host.
     * if needed, use the 'variables' parameter to pass variables to the host.
{{/-first}}
     * URL: {{{url}}}
{{#variables}}
{{#-first}}
     *  Variables:
{{/-first}}
     *    - {{{name}}}: {{{description}}}{{^description}} No description provided{{/description}}{{#enumValues}}
{{#-first}}
     *      Allowed values:
{{/-first}}
     *        - {{{.}}}{{/enumValues}}
{{/variables}}
{{#-last}}
     *
{{/-last}}
{{/servers}}
{{#allParams}}
     * @param  {{{dataType}}}{{^required}}|null{{/required}} ${{paramName}}{{#description}} {{.}}{{/description}} {{#required}}(required){{/required}}{{^required}}(optional{{#defaultValue}}, default to {{{.}}}{{/defaultValue}}){{/required}}{{#isDeprecated}} (deprecated){{/isDeprecated}}
{{/allParams}}
{{#servers}}
{{#-first}}
     * @param  null|int $hostIndex Host index. Defaults to null. If null, then the library will use $this->hostIndex instead
     * @param  array $variables Associative array of variables to pass to the host. Defaults to empty array.
{{/-first}}
{{/servers}}
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['{{{operationId}}}'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of {{#returnType}}{{#responses}}{{#dataType}}{{^-first}}|{{/-first}}{{/dataType}}{{{dataType}}}{{/responses}}{{/returnType}}{{^returnType}}null{{/returnType}}, HTTP status code, HTTP response headers (array of strings)
    {{#isDeprecated}}
     * @deprecated
    {{/isDeprecated}}
     */
    public function {{operationId}}WithHttpInfo(
    {{^vendorExtensions.x-group-parameters}}
    {{#allParams}}
        {{^required}}?{{/required}}{{vendorExtensions.x-php-param-type}} ${{paramName}}{{^required}} = {{#defaultValue}}{{{.}}}{{/defaultValue}}{{^defaultValue}}null{{/defaultValue}}{{/required}},
    {{/allParams}}
    {{#servers}}
    {{#-first}}
        ?int $hostIndex = null,
        array $variables = [],
    {{/-first}}
    {{/servers}}
        string $contentType = self::contentTypes['{{{operationId}}}'][0]
    {{/vendorExtensions.x-group-parameters}}
    {{#vendorExtensions.x-group-parameters}}
        array $associative_array
    {{/vendorExtensions.x-group-parameters}}
    ): array;

    /**
     * Operation {{{operationId}}}Async
     *
{{#summary}}
     * {{.}}
     *
{{/summary}}
{{#description}}
     * {{.}}
     *
{{/description}}
{{#vendorExtensions.x-group-parameters}}
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
{{/vendorExtensions.x-group-parameters}}
{{#servers}}
{{#-first}}
     * This operation contains host(s) defined in the OpenAPI spec. Use 'hostIndex' to select the host.
     * if needed, use the 'variables' parameter to pass variables to the host.
{{/-first}}
     * URL: {{{url}}}
{{#variables}}
{{#-first}}
     *  Variables:
{{/-first}}
     *    - {{{name}}}: {{{description}}}{{^description}} No description provided{{/description}}{{#enumValues}}
{{#-first}}
     *      Allowed values:
{{/-first}}
     *        - {{{.}}}{{/enumValues}}
{{/variables}}
{{#-last}}
     *
{{/-last}}
{{/servers}}
{{#allParams}}
     * @param  {{{dataType}}}{{^required}}|null{{/required}} ${{paramName}}{{#description}} {{.}}{{/description}} {{#required}}(required){{/required}}{{^required}}(optional{{#defaultValue}}, default to {{{.}}}{{/defaultValue}}){{/required}}{{#isDeprecated}} (deprecated){{/isDeprecated}}
{{/allParams}}
{{#servers}}
{{#-first}}
     * @param  null|int $hostIndex Host index. Defaults to null. If null, then the library will use $this->hostIndex instead
     * @param  array $variables Associative array of variables to pass to the host. Defaults to empty array.
{{/-first}}
{{/servers}}
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['{{{operationId}}}'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
    {{#isDeprecated}}
     * @deprecated
    {{/isDeprecated}}
     */
    public function {{operationId}}Async(
    {{^vendorExtensions.x-group-parameters}}
    {{#allParams}}
        {{^required}}?{{/required}}{{vendorExtensions.x-php-param-type}} ${{paramName}}{{^required}} = {{#defaultValue}}{{{.}}}{{/defaultValue}}{{^defaultValue}}null{{/defaultValue}}{{/required}},
    {{/allParams}}
    {{#servers}}
    {{#-first}}
        ?int $hostIndex = null,
        array $variables = [],
    {{/-first}}
    {{/servers}}
        string $contentType = self::contentTypes['{{{operationId}}}'][0]
    {{/vendorExtensions.x-group-parameters}}
    {{#vendorExtensions.x-group-parameters}}
        array $associative_array
    {{/vendorExtensions.x-group-parameters}}
    ): PromiseInterface;

    /**
     * Operation {{{operationId}}}AsyncWithHttpInfo
     *
{{#summary}}
     * {{.}}
     *
{{/summary}}
{{#description}}
     * {{.}}
     *
{{/description}}
{{#vendorExtensions.x-group-parameters}}
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
{{/vendorExtensions.x-group-parameters}}
{{#servers}}
{{#-first}}
     * This operation contains host(s) defined in the OpenAPI spec. Use 'hostIndex' to select the host.
     * if needed, use the 'variables' parameter to pass variables to the host.
{{/-first}}
     * URL: {{{url}}}
{{#variables}}
{{#-first}}
     *  Variables:
{{/-first}}
     *    - {{{name}}}: {{{description}}}{{^description}} No description provided{{/description}}{{#enumValues}}
{{#-first}}
     *      Allowed values:
{{/-first}}
     *        - {{{.}}}{{/enumValues}}
{{/variables}}
{{#-last}}
     *
{{/-last}}
{{/servers}}
{{#allParams}}
     * @param  {{{dataType}}}{{^required}}|null{{/required}} ${{paramName}}{{#description}} {{.}}{{/description}} {{#required}}(required){{/required}}{{^required}}(optional{{#defaultValue}}, default to {{{.}}}{{/defaultValue}}){{/required}}{{#isDeprecated}} (deprecated){{/isDeprecated}}
{{/allParams}}
{{#servers}}
{{#-first}}
     * @param  null|int $hostIndex Host index. Defaults to null. If null, then the library will use $this->hostIndex instead
     * @param  array $variables Associative array of variables to pass to the host. Defaults to empty array.
{{/-first}}
{{/servers}}
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['{{{operationId}}}'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
    {{#isDeprecated}}
     * @deprecated
    {{/isDeprecated}}
     */
    public function {{operationId}}AsyncWithHttpInfo(
    {{^vendorExtensions.x-group-parameters}}
    {{#allParams}}
        ${{paramName}}{{^required}} = {{#defaultValue}}{{{.}}}{{/defaultValue}}{{^defaultValue}}null{{/defaultValue}}{{/required}},
    {{/allParams}}
    {{#servers}}
    {{#-first}}
        ?int $hostIndex = null,
        array $variables = [],
    {{/-first}}
    {{/servers}}
        string $contentType = self::contentTypes['{{{operationId}}}'][0]
    {{/vendorExtensions.x-group-parameters}}
    {{#vendorExtensions.x-group-parameters}}
        array $associative_array
    {{/vendorExtensions.x-group-parameters}}
    ): PromiseInterface;

    /**
     * Create request for operation '{{{operationId}}}'
     *
{{#vendorExtensions.x-group-parameters}}
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
{{/vendorExtensions.x-group-parameters}}
{{#servers}}
{{#-first}}
    * This operation contains host(s) defined in the OpenAPI spec. Use 'hostIndex' to select the host.
    * if needed, use the 'variables' parameter to pass variables to the host.
{{/-first}}
     * URL: {{{url}}}
{{#variables}}
{{#-first}}
     *  Variables:
{{/-first}}
    *    - {{{name}}}: {{{description}}}{{^description}} No description provided{{/description}}{{#enumValues}}
{{#-first}}
     *      Allowed values:
{{/-first}}
     *        - {{{.}}}{{/enumValues}}
{{/variables}}
{{#-last}}
     *
{{/-last}}
{{/servers}}
{{#allParams}}
     * @param  {{{dataType}}}{{^required}}|null{{/required}} ${{paramName}}{{#description}} {{.}}{{/description}} {{#required}}(required){{/required}}{{^required}}(optional{{#defaultValue}}, default to {{{.}}}{{/defaultValue}}){{/required}}{{#isDeprecated}} (deprecated){{/isDeprecated}}
{{/allParams}}
{{#servers}}
{{#-first}}
     * @param  null|int $hostIndex Host index. Defaults to null. If null, then the library will use $this->hostIndex instead
     * @param  array $variables Associative array of variables to pass to the host. Defaults to empty array.
{{/-first}}
{{/servers}}
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['{{{operationId}}}'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
    {{#isDeprecated}}
     * @deprecated
    {{/isDeprecated}}
     */
    public function {{operationId}}Request(
    {{^vendorExtensions.x-group-parameters}}
    {{#allParams}}
        ${{paramName}}{{^required}} = {{#defaultValue}}{{{.}}}{{/defaultValue}}{{^defaultValue}}null{{/defaultValue}}{{/required}},
    {{/allParams}}
    {{#servers}}
    {{#-first}}
        ?int $hostIndex = null,
        array $variables = [],
    {{/-first}}
    {{/servers}}
        string $contentType = self::contentTypes['{{{operationId}}}'][0]
    {{/vendorExtensions.x-group-parameters}}
    {{#vendorExtensions.x-group-parameters}}
        array $associative_array
    {{/vendorExtensions.x-group-parameters}}
    ): Request;
    {{/operation}}
}
{{/operations}}
