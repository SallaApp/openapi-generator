<?php
/**
 * AnotherFakeApiInterface
 * PHP version 8.1
 *
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * The version of the OpenAPI document: 1.0.0
 * @generated Generated by: https://openapi-generator.tech
 * Generator version: 7.6.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Api;

use InvalidArgumentException;
use GuzzleHttp\Psr7\Request;
use GuzzleHttp\Promise\PromiseInterface;
use OpenAPI\Client\ApiException;
use OpenAPI\Client\Configuration;

/**
 * AnotherFakeApi Class Doc Comment
 *
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
interface AnotherFakeApiInterface
{
    /** @var string[] $contentTypes **/
    public const contentTypes = [
        'call123TestSpecialTags' => [
            'application/json',
        ],
    ];

    /**
     * Set the host index
     *
     * @param int $hostIndex Host index (required)
     */
    public function setHostIndex(int $hostIndex): void;

    /**
     * Get the host index
     *
     * @return int Host index
     */
    public function getHostIndex(): int;

    /**
     * @return Configuration
     */
    public function getConfig(): Configuration;

    /**
     * Operation call123TestSpecialTags
     *
     * To test special tags
     *
     * @param  \OpenAPI\Client\Model\Client $client client model (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['call123TestSpecialTags'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return \OpenAPI\Client\Model\Client
     */
    public function call123TestSpecialTags(
        \OpenAPI\Client\Model\Client $client,
        string $contentType = self::contentTypes['call123TestSpecialTags'][0]
    ): \OpenAPI\Client\Model\Client;

    /**
     * Operation call123TestSpecialTagsWithHttpInfo
     *
     * To test special tags
     *
     * @param  \OpenAPI\Client\Model\Client $client client model (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['call123TestSpecialTags'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of \OpenAPI\Client\Model\Client, HTTP status code, HTTP response headers (array of strings)
     */
    public function call123TestSpecialTagsWithHttpInfo(
        \OpenAPI\Client\Model\Client $client,
        string $contentType = self::contentTypes['call123TestSpecialTags'][0]
    ): array;

    /**
     * Operation call123TestSpecialTagsAsync
     *
     * To test special tags
     *
     * @param  \OpenAPI\Client\Model\Client $client client model (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['call123TestSpecialTags'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function call123TestSpecialTagsAsync(
        \OpenAPI\Client\Model\Client $client,
        string $contentType = self::contentTypes['call123TestSpecialTags'][0]
    ): PromiseInterface;

    /**
     * Operation call123TestSpecialTagsAsyncWithHttpInfo
     *
     * To test special tags
     *
     * @param  \OpenAPI\Client\Model\Client $client client model (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['call123TestSpecialTags'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function call123TestSpecialTagsAsyncWithHttpInfo(
        $client,
        string $contentType = self::contentTypes['call123TestSpecialTags'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'call123TestSpecialTags'
     *
     * @param  \OpenAPI\Client\Model\Client $client client model (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['call123TestSpecialTags'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function call123TestSpecialTagsRequest(
        $client,
        string $contentType = self::contentTypes['call123TestSpecialTags'][0]
    ): Request;
}
