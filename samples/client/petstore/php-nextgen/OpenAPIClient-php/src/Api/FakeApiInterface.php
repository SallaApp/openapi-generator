<?php
/**
 * FakeApiInterface
 * PHP version 8.1
 *
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * The version of the OpenAPI document: 1.0.0
 * @generated Generated by: https://openapi-generator.tech
 * Generator version: 7.6.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Api;

use InvalidArgumentException;
use GuzzleHttp\Psr7\Request;
use GuzzleHttp\Promise\PromiseInterface;
use OpenAPI\Client\ApiException;
use OpenAPI\Client\Configuration;

/**
 * FakeApi Class Doc Comment
 *
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
interface FakeApiInterface
{
    /** @var string[] $contentTypes **/
    public const contentTypes = [
        'fakeBigDecimalMap' => [
            'application/json',
        ],
        'fakeHealthGet' => [
            'application/json',
        ],
        'fakeHttpSignatureTest' => [
            'application/json',
            'application/xml',
        ],
        'fakeOuterBooleanSerialize' => [
            'application/json',
        ],
        'fakeOuterCompositeSerialize' => [
            'application/json',
        ],
        'fakeOuterNumberSerialize' => [
            'application/json',
        ],
        'fakeOuterStringSerialize' => [
            'application/json',
        ],
        'fakePropertyEnumIntegerSerialize' => [
            'application/json',
        ],
        'testAdditionalPropertiesReference' => [
            'application/json',
        ],
        'testBodyWithBinary' => [
            'image/png',
        ],
        'testBodyWithFileSchema' => [
            'application/json',
        ],
        'testBodyWithQueryParams' => [
            'application/json',
        ],
        'testClientModel' => [
            'application/json',
        ],
        'testEndpointParameters' => [
            'application/x-www-form-urlencoded',
        ],
        'testEnumParameters' => [
            'application/x-www-form-urlencoded',
        ],
        'testGroupParameters' => [
            'application/json',
        ],
        'testInlineAdditionalProperties' => [
            'application/json',
        ],
        'testInlineFreeformAdditionalProperties' => [
            'application/json',
        ],
        'testJsonFormData' => [
            'application/x-www-form-urlencoded',
        ],
        'testNullable' => [
            'application/json',
        ],
        'testQueryParameterCollectionFormat' => [
            'application/json',
        ],
        'testStringMapReference' => [
            'application/json',
        ],
    ];

    /**
     * Set the host index
     *
     * @param int $hostIndex Host index (required)
     */
    public function setHostIndex(int $hostIndex): void;

    /**
     * Get the host index
     *
     * @return int Host index
     */
    public function getHostIndex(): int;

    /**
     * @return Configuration
     */
    public function getConfig(): Configuration;

    /**
     * Operation fakeBigDecimalMap
     *
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeBigDecimalMap'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return \OpenAPI\Client\Model\FakeBigDecimalMap200Response
     */
    public function fakeBigDecimalMap(
        string $contentType = self::contentTypes['fakeBigDecimalMap'][0]
    ): \OpenAPI\Client\Model\FakeBigDecimalMap200Response;

    /**
     * Operation fakeBigDecimalMapWithHttpInfo
     *
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeBigDecimalMap'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of \OpenAPI\Client\Model\FakeBigDecimalMap200Response, HTTP status code, HTTP response headers (array of strings)
     */
    public function fakeBigDecimalMapWithHttpInfo(
        string $contentType = self::contentTypes['fakeBigDecimalMap'][0]
    ): array;

    /**
     * Operation fakeBigDecimalMapAsync
     *
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeBigDecimalMap'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function fakeBigDecimalMapAsync(
        string $contentType = self::contentTypes['fakeBigDecimalMap'][0]
    ): PromiseInterface;

    /**
     * Operation fakeBigDecimalMapAsyncWithHttpInfo
     *
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeBigDecimalMap'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function fakeBigDecimalMapAsyncWithHttpInfo(
        string $contentType = self::contentTypes['fakeBigDecimalMap'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'fakeBigDecimalMap'
     *
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeBigDecimalMap'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function fakeBigDecimalMapRequest(
        string $contentType = self::contentTypes['fakeBigDecimalMap'][0]
    ): Request;
    /**
     * Operation fakeHealthGet
     *
     * Health check endpoint
     *
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeHealthGet'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return \OpenAPI\Client\Model\HealthCheckResult
     */
    public function fakeHealthGet(
        string $contentType = self::contentTypes['fakeHealthGet'][0]
    ): \OpenAPI\Client\Model\HealthCheckResult;

    /**
     * Operation fakeHealthGetWithHttpInfo
     *
     * Health check endpoint
     *
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeHealthGet'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of \OpenAPI\Client\Model\HealthCheckResult, HTTP status code, HTTP response headers (array of strings)
     */
    public function fakeHealthGetWithHttpInfo(
        string $contentType = self::contentTypes['fakeHealthGet'][0]
    ): array;

    /**
     * Operation fakeHealthGetAsync
     *
     * Health check endpoint
     *
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeHealthGet'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function fakeHealthGetAsync(
        string $contentType = self::contentTypes['fakeHealthGet'][0]
    ): PromiseInterface;

    /**
     * Operation fakeHealthGetAsyncWithHttpInfo
     *
     * Health check endpoint
     *
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeHealthGet'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function fakeHealthGetAsyncWithHttpInfo(
        string $contentType = self::contentTypes['fakeHealthGet'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'fakeHealthGet'
     *
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeHealthGet'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function fakeHealthGetRequest(
        string $contentType = self::contentTypes['fakeHealthGet'][0]
    ): Request;
    /**
     * Operation fakeHttpSignatureTest
     *
     * test http signature authentication
     *
     * @param  \OpenAPI\Client\Model\Pet $pet Pet object that needs to be added to the store (required)
     * @param  string|null $query_1 query parameter (optional)
     * @param  string|null $header_1 header parameter (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeHttpSignatureTest'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return void
     */
    public function fakeHttpSignatureTest(
        \OpenAPI\Client\Model\Pet $pet,
        ?string $query_1 = null,
        ?string $header_1 = null,
        string $contentType = self::contentTypes['fakeHttpSignatureTest'][0]
    ): void;

    /**
     * Operation fakeHttpSignatureTestWithHttpInfo
     *
     * test http signature authentication
     *
     * @param  \OpenAPI\Client\Model\Pet $pet Pet object that needs to be added to the store (required)
     * @param  string|null $query_1 query parameter (optional)
     * @param  string|null $header_1 header parameter (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeHttpSignatureTest'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of null, HTTP status code, HTTP response headers (array of strings)
     */
    public function fakeHttpSignatureTestWithHttpInfo(
        \OpenAPI\Client\Model\Pet $pet,
        ?string $query_1 = null,
        ?string $header_1 = null,
        string $contentType = self::contentTypes['fakeHttpSignatureTest'][0]
    ): array;

    /**
     * Operation fakeHttpSignatureTestAsync
     *
     * test http signature authentication
     *
     * @param  \OpenAPI\Client\Model\Pet $pet Pet object that needs to be added to the store (required)
     * @param  string|null $query_1 query parameter (optional)
     * @param  string|null $header_1 header parameter (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeHttpSignatureTest'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function fakeHttpSignatureTestAsync(
        \OpenAPI\Client\Model\Pet $pet,
        ?string $query_1 = null,
        ?string $header_1 = null,
        string $contentType = self::contentTypes['fakeHttpSignatureTest'][0]
    ): PromiseInterface;

    /**
     * Operation fakeHttpSignatureTestAsyncWithHttpInfo
     *
     * test http signature authentication
     *
     * @param  \OpenAPI\Client\Model\Pet $pet Pet object that needs to be added to the store (required)
     * @param  string|null $query_1 query parameter (optional)
     * @param  string|null $header_1 header parameter (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeHttpSignatureTest'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function fakeHttpSignatureTestAsyncWithHttpInfo(
        $pet,
        $query_1 = null,
        $header_1 = null,
        string $contentType = self::contentTypes['fakeHttpSignatureTest'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'fakeHttpSignatureTest'
     *
     * @param  \OpenAPI\Client\Model\Pet $pet Pet object that needs to be added to the store (required)
     * @param  string|null $query_1 query parameter (optional)
     * @param  string|null $header_1 header parameter (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeHttpSignatureTest'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function fakeHttpSignatureTestRequest(
        $pet,
        $query_1 = null,
        $header_1 = null,
        string $contentType = self::contentTypes['fakeHttpSignatureTest'][0]
    ): Request;
    /**
     * Operation fakeOuterBooleanSerialize
     *
     * @param  bool|null $body Input boolean as post body (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeOuterBooleanSerialize'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return bool
     */
    public function fakeOuterBooleanSerialize(
        ?bool $body = null,
        string $contentType = self::contentTypes['fakeOuterBooleanSerialize'][0]
    ): bool;

    /**
     * Operation fakeOuterBooleanSerializeWithHttpInfo
     *
     * @param  bool|null $body Input boolean as post body (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeOuterBooleanSerialize'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of bool, HTTP status code, HTTP response headers (array of strings)
     */
    public function fakeOuterBooleanSerializeWithHttpInfo(
        ?bool $body = null,
        string $contentType = self::contentTypes['fakeOuterBooleanSerialize'][0]
    ): array;

    /**
     * Operation fakeOuterBooleanSerializeAsync
     *
     * @param  bool|null $body Input boolean as post body (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeOuterBooleanSerialize'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function fakeOuterBooleanSerializeAsync(
        ?bool $body = null,
        string $contentType = self::contentTypes['fakeOuterBooleanSerialize'][0]
    ): PromiseInterface;

    /**
     * Operation fakeOuterBooleanSerializeAsyncWithHttpInfo
     *
     * @param  bool|null $body Input boolean as post body (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeOuterBooleanSerialize'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function fakeOuterBooleanSerializeAsyncWithHttpInfo(
        $body = null,
        string $contentType = self::contentTypes['fakeOuterBooleanSerialize'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'fakeOuterBooleanSerialize'
     *
     * @param  bool|null $body Input boolean as post body (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeOuterBooleanSerialize'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function fakeOuterBooleanSerializeRequest(
        $body = null,
        string $contentType = self::contentTypes['fakeOuterBooleanSerialize'][0]
    ): Request;
    /**
     * Operation fakeOuterCompositeSerialize
     *
     * @param  \OpenAPI\Client\Model\OuterComposite|null $outer_composite Input composite as post body (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeOuterCompositeSerialize'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return \OpenAPI\Client\Model\OuterComposite
     */
    public function fakeOuterCompositeSerialize(
        ?\OpenAPI\Client\Model\OuterComposite $outer_composite = null,
        string $contentType = self::contentTypes['fakeOuterCompositeSerialize'][0]
    ): \OpenAPI\Client\Model\OuterComposite;

    /**
     * Operation fakeOuterCompositeSerializeWithHttpInfo
     *
     * @param  \OpenAPI\Client\Model\OuterComposite|null $outer_composite Input composite as post body (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeOuterCompositeSerialize'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of \OpenAPI\Client\Model\OuterComposite, HTTP status code, HTTP response headers (array of strings)
     */
    public function fakeOuterCompositeSerializeWithHttpInfo(
        ?\OpenAPI\Client\Model\OuterComposite $outer_composite = null,
        string $contentType = self::contentTypes['fakeOuterCompositeSerialize'][0]
    ): array;

    /**
     * Operation fakeOuterCompositeSerializeAsync
     *
     * @param  \OpenAPI\Client\Model\OuterComposite|null $outer_composite Input composite as post body (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeOuterCompositeSerialize'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function fakeOuterCompositeSerializeAsync(
        ?\OpenAPI\Client\Model\OuterComposite $outer_composite = null,
        string $contentType = self::contentTypes['fakeOuterCompositeSerialize'][0]
    ): PromiseInterface;

    /**
     * Operation fakeOuterCompositeSerializeAsyncWithHttpInfo
     *
     * @param  \OpenAPI\Client\Model\OuterComposite|null $outer_composite Input composite as post body (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeOuterCompositeSerialize'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function fakeOuterCompositeSerializeAsyncWithHttpInfo(
        $outer_composite = null,
        string $contentType = self::contentTypes['fakeOuterCompositeSerialize'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'fakeOuterCompositeSerialize'
     *
     * @param  \OpenAPI\Client\Model\OuterComposite|null $outer_composite Input composite as post body (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeOuterCompositeSerialize'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function fakeOuterCompositeSerializeRequest(
        $outer_composite = null,
        string $contentType = self::contentTypes['fakeOuterCompositeSerialize'][0]
    ): Request;
    /**
     * Operation fakeOuterNumberSerialize
     *
     * @param  float|null $body Input number as post body (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeOuterNumberSerialize'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return float
     */
    public function fakeOuterNumberSerialize(
        ?float $body = null,
        string $contentType = self::contentTypes['fakeOuterNumberSerialize'][0]
    ): float;

    /**
     * Operation fakeOuterNumberSerializeWithHttpInfo
     *
     * @param  float|null $body Input number as post body (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeOuterNumberSerialize'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of float, HTTP status code, HTTP response headers (array of strings)
     */
    public function fakeOuterNumberSerializeWithHttpInfo(
        ?float $body = null,
        string $contentType = self::contentTypes['fakeOuterNumberSerialize'][0]
    ): array;

    /**
     * Operation fakeOuterNumberSerializeAsync
     *
     * @param  float|null $body Input number as post body (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeOuterNumberSerialize'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function fakeOuterNumberSerializeAsync(
        ?float $body = null,
        string $contentType = self::contentTypes['fakeOuterNumberSerialize'][0]
    ): PromiseInterface;

    /**
     * Operation fakeOuterNumberSerializeAsyncWithHttpInfo
     *
     * @param  float|null $body Input number as post body (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeOuterNumberSerialize'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function fakeOuterNumberSerializeAsyncWithHttpInfo(
        $body = null,
        string $contentType = self::contentTypes['fakeOuterNumberSerialize'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'fakeOuterNumberSerialize'
     *
     * @param  float|null $body Input number as post body (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeOuterNumberSerialize'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function fakeOuterNumberSerializeRequest(
        $body = null,
        string $contentType = self::contentTypes['fakeOuterNumberSerialize'][0]
    ): Request;
    /**
     * Operation fakeOuterStringSerialize
     *
     * @param  string|null $body Input string as post body (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeOuterStringSerialize'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return string
     */
    public function fakeOuterStringSerialize(
        ?string $body = null,
        string $contentType = self::contentTypes['fakeOuterStringSerialize'][0]
    ): string;

    /**
     * Operation fakeOuterStringSerializeWithHttpInfo
     *
     * @param  string|null $body Input string as post body (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeOuterStringSerialize'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of string, HTTP status code, HTTP response headers (array of strings)
     */
    public function fakeOuterStringSerializeWithHttpInfo(
        ?string $body = null,
        string $contentType = self::contentTypes['fakeOuterStringSerialize'][0]
    ): array;

    /**
     * Operation fakeOuterStringSerializeAsync
     *
     * @param  string|null $body Input string as post body (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeOuterStringSerialize'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function fakeOuterStringSerializeAsync(
        ?string $body = null,
        string $contentType = self::contentTypes['fakeOuterStringSerialize'][0]
    ): PromiseInterface;

    /**
     * Operation fakeOuterStringSerializeAsyncWithHttpInfo
     *
     * @param  string|null $body Input string as post body (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeOuterStringSerialize'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function fakeOuterStringSerializeAsyncWithHttpInfo(
        $body = null,
        string $contentType = self::contentTypes['fakeOuterStringSerialize'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'fakeOuterStringSerialize'
     *
     * @param  string|null $body Input string as post body (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakeOuterStringSerialize'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function fakeOuterStringSerializeRequest(
        $body = null,
        string $contentType = self::contentTypes['fakeOuterStringSerialize'][0]
    ): Request;
    /**
     * Operation fakePropertyEnumIntegerSerialize
     *
     * @param  \OpenAPI\Client\Model\OuterObjectWithEnumProperty $outer_object_with_enum_property Input enum (int) as post body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakePropertyEnumIntegerSerialize'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return \OpenAPI\Client\Model\OuterObjectWithEnumProperty
     */
    public function fakePropertyEnumIntegerSerialize(
        \OpenAPI\Client\Model\OuterObjectWithEnumProperty $outer_object_with_enum_property,
        string $contentType = self::contentTypes['fakePropertyEnumIntegerSerialize'][0]
    ): \OpenAPI\Client\Model\OuterObjectWithEnumProperty;

    /**
     * Operation fakePropertyEnumIntegerSerializeWithHttpInfo
     *
     * @param  \OpenAPI\Client\Model\OuterObjectWithEnumProperty $outer_object_with_enum_property Input enum (int) as post body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakePropertyEnumIntegerSerialize'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of \OpenAPI\Client\Model\OuterObjectWithEnumProperty, HTTP status code, HTTP response headers (array of strings)
     */
    public function fakePropertyEnumIntegerSerializeWithHttpInfo(
        \OpenAPI\Client\Model\OuterObjectWithEnumProperty $outer_object_with_enum_property,
        string $contentType = self::contentTypes['fakePropertyEnumIntegerSerialize'][0]
    ): array;

    /**
     * Operation fakePropertyEnumIntegerSerializeAsync
     *
     * @param  \OpenAPI\Client\Model\OuterObjectWithEnumProperty $outer_object_with_enum_property Input enum (int) as post body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakePropertyEnumIntegerSerialize'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function fakePropertyEnumIntegerSerializeAsync(
        \OpenAPI\Client\Model\OuterObjectWithEnumProperty $outer_object_with_enum_property,
        string $contentType = self::contentTypes['fakePropertyEnumIntegerSerialize'][0]
    ): PromiseInterface;

    /**
     * Operation fakePropertyEnumIntegerSerializeAsyncWithHttpInfo
     *
     * @param  \OpenAPI\Client\Model\OuterObjectWithEnumProperty $outer_object_with_enum_property Input enum (int) as post body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakePropertyEnumIntegerSerialize'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function fakePropertyEnumIntegerSerializeAsyncWithHttpInfo(
        $outer_object_with_enum_property,
        string $contentType = self::contentTypes['fakePropertyEnumIntegerSerialize'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'fakePropertyEnumIntegerSerialize'
     *
     * @param  \OpenAPI\Client\Model\OuterObjectWithEnumProperty $outer_object_with_enum_property Input enum (int) as post body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['fakePropertyEnumIntegerSerialize'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function fakePropertyEnumIntegerSerializeRequest(
        $outer_object_with_enum_property,
        string $contentType = self::contentTypes['fakePropertyEnumIntegerSerialize'][0]
    ): Request;
    /**
     * Operation testAdditionalPropertiesReference
     *
     * test referenced additionalProperties
     *
     * @param  array<string,mixed> $request_body request body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testAdditionalPropertiesReference'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return void
     */
    public function testAdditionalPropertiesReference(
        array $request_body,
        string $contentType = self::contentTypes['testAdditionalPropertiesReference'][0]
    ): void;

    /**
     * Operation testAdditionalPropertiesReferenceWithHttpInfo
     *
     * test referenced additionalProperties
     *
     * @param  array<string,mixed> $request_body request body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testAdditionalPropertiesReference'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of null, HTTP status code, HTTP response headers (array of strings)
     */
    public function testAdditionalPropertiesReferenceWithHttpInfo(
        array $request_body,
        string $contentType = self::contentTypes['testAdditionalPropertiesReference'][0]
    ): array;

    /**
     * Operation testAdditionalPropertiesReferenceAsync
     *
     * test referenced additionalProperties
     *
     * @param  array<string,mixed> $request_body request body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testAdditionalPropertiesReference'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testAdditionalPropertiesReferenceAsync(
        array $request_body,
        string $contentType = self::contentTypes['testAdditionalPropertiesReference'][0]
    ): PromiseInterface;

    /**
     * Operation testAdditionalPropertiesReferenceAsyncWithHttpInfo
     *
     * test referenced additionalProperties
     *
     * @param  array<string,mixed> $request_body request body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testAdditionalPropertiesReference'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testAdditionalPropertiesReferenceAsyncWithHttpInfo(
        $request_body,
        string $contentType = self::contentTypes['testAdditionalPropertiesReference'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'testAdditionalPropertiesReference'
     *
     * @param  array<string,mixed> $request_body request body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testAdditionalPropertiesReference'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function testAdditionalPropertiesReferenceRequest(
        $request_body,
        string $contentType = self::contentTypes['testAdditionalPropertiesReference'][0]
    ): Request;
    /**
     * Operation testBodyWithBinary
     *
     * @param  \SplFileObject $body image to upload (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testBodyWithBinary'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return void
     */
    public function testBodyWithBinary(
        \SplFileObject $body,
        string $contentType = self::contentTypes['testBodyWithBinary'][0]
    ): void;

    /**
     * Operation testBodyWithBinaryWithHttpInfo
     *
     * @param  \SplFileObject $body image to upload (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testBodyWithBinary'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of null, HTTP status code, HTTP response headers (array of strings)
     */
    public function testBodyWithBinaryWithHttpInfo(
        \SplFileObject $body,
        string $contentType = self::contentTypes['testBodyWithBinary'][0]
    ): array;

    /**
     * Operation testBodyWithBinaryAsync
     *
     * @param  \SplFileObject $body image to upload (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testBodyWithBinary'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testBodyWithBinaryAsync(
        \SplFileObject $body,
        string $contentType = self::contentTypes['testBodyWithBinary'][0]
    ): PromiseInterface;

    /**
     * Operation testBodyWithBinaryAsyncWithHttpInfo
     *
     * @param  \SplFileObject $body image to upload (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testBodyWithBinary'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testBodyWithBinaryAsyncWithHttpInfo(
        $body,
        string $contentType = self::contentTypes['testBodyWithBinary'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'testBodyWithBinary'
     *
     * @param  \SplFileObject $body image to upload (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testBodyWithBinary'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function testBodyWithBinaryRequest(
        $body,
        string $contentType = self::contentTypes['testBodyWithBinary'][0]
    ): Request;
    /**
     * Operation testBodyWithFileSchema
     *
     * @param  \OpenAPI\Client\Model\FileSchemaTestClass $file_schema_test_class file_schema_test_class (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testBodyWithFileSchema'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return void
     */
    public function testBodyWithFileSchema(
        \OpenAPI\Client\Model\FileSchemaTestClass $file_schema_test_class,
        string $contentType = self::contentTypes['testBodyWithFileSchema'][0]
    ): void;

    /**
     * Operation testBodyWithFileSchemaWithHttpInfo
     *
     * @param  \OpenAPI\Client\Model\FileSchemaTestClass $file_schema_test_class (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testBodyWithFileSchema'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of null, HTTP status code, HTTP response headers (array of strings)
     */
    public function testBodyWithFileSchemaWithHttpInfo(
        \OpenAPI\Client\Model\FileSchemaTestClass $file_schema_test_class,
        string $contentType = self::contentTypes['testBodyWithFileSchema'][0]
    ): array;

    /**
     * Operation testBodyWithFileSchemaAsync
     *
     * @param  \OpenAPI\Client\Model\FileSchemaTestClass $file_schema_test_class (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testBodyWithFileSchema'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testBodyWithFileSchemaAsync(
        \OpenAPI\Client\Model\FileSchemaTestClass $file_schema_test_class,
        string $contentType = self::contentTypes['testBodyWithFileSchema'][0]
    ): PromiseInterface;

    /**
     * Operation testBodyWithFileSchemaAsyncWithHttpInfo
     *
     * @param  \OpenAPI\Client\Model\FileSchemaTestClass $file_schema_test_class (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testBodyWithFileSchema'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testBodyWithFileSchemaAsyncWithHttpInfo(
        $file_schema_test_class,
        string $contentType = self::contentTypes['testBodyWithFileSchema'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'testBodyWithFileSchema'
     *
     * @param  \OpenAPI\Client\Model\FileSchemaTestClass $file_schema_test_class (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testBodyWithFileSchema'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function testBodyWithFileSchemaRequest(
        $file_schema_test_class,
        string $contentType = self::contentTypes['testBodyWithFileSchema'][0]
    ): Request;
    /**
     * Operation testBodyWithQueryParams
     *
     * @param  string $query query (required)
     * @param  \OpenAPI\Client\Model\User $user user (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testBodyWithQueryParams'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return void
     */
    public function testBodyWithQueryParams(
        string $query,
        \OpenAPI\Client\Model\User $user,
        string $contentType = self::contentTypes['testBodyWithQueryParams'][0]
    ): void;

    /**
     * Operation testBodyWithQueryParamsWithHttpInfo
     *
     * @param  string $query (required)
     * @param  \OpenAPI\Client\Model\User $user (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testBodyWithQueryParams'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of null, HTTP status code, HTTP response headers (array of strings)
     */
    public function testBodyWithQueryParamsWithHttpInfo(
        string $query,
        \OpenAPI\Client\Model\User $user,
        string $contentType = self::contentTypes['testBodyWithQueryParams'][0]
    ): array;

    /**
     * Operation testBodyWithQueryParamsAsync
     *
     * @param  string $query (required)
     * @param  \OpenAPI\Client\Model\User $user (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testBodyWithQueryParams'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testBodyWithQueryParamsAsync(
        string $query,
        \OpenAPI\Client\Model\User $user,
        string $contentType = self::contentTypes['testBodyWithQueryParams'][0]
    ): PromiseInterface;

    /**
     * Operation testBodyWithQueryParamsAsyncWithHttpInfo
     *
     * @param  string $query (required)
     * @param  \OpenAPI\Client\Model\User $user (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testBodyWithQueryParams'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testBodyWithQueryParamsAsyncWithHttpInfo(
        $query,
        $user,
        string $contentType = self::contentTypes['testBodyWithQueryParams'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'testBodyWithQueryParams'
     *
     * @param  string $query (required)
     * @param  \OpenAPI\Client\Model\User $user (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testBodyWithQueryParams'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function testBodyWithQueryParamsRequest(
        $query,
        $user,
        string $contentType = self::contentTypes['testBodyWithQueryParams'][0]
    ): Request;
    /**
     * Operation testClientModel
     *
     * To test \&quot;client\&quot; model
     *
     * @param  \OpenAPI\Client\Model\Client $client client model (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testClientModel'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return \OpenAPI\Client\Model\Client
     */
    public function testClientModel(
        \OpenAPI\Client\Model\Client $client,
        string $contentType = self::contentTypes['testClientModel'][0]
    ): \OpenAPI\Client\Model\Client;

    /**
     * Operation testClientModelWithHttpInfo
     *
     * To test \&quot;client\&quot; model
     *
     * @param  \OpenAPI\Client\Model\Client $client client model (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testClientModel'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of \OpenAPI\Client\Model\Client, HTTP status code, HTTP response headers (array of strings)
     */
    public function testClientModelWithHttpInfo(
        \OpenAPI\Client\Model\Client $client,
        string $contentType = self::contentTypes['testClientModel'][0]
    ): array;

    /**
     * Operation testClientModelAsync
     *
     * To test \&quot;client\&quot; model
     *
     * @param  \OpenAPI\Client\Model\Client $client client model (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testClientModel'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testClientModelAsync(
        \OpenAPI\Client\Model\Client $client,
        string $contentType = self::contentTypes['testClientModel'][0]
    ): PromiseInterface;

    /**
     * Operation testClientModelAsyncWithHttpInfo
     *
     * To test \&quot;client\&quot; model
     *
     * @param  \OpenAPI\Client\Model\Client $client client model (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testClientModel'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testClientModelAsyncWithHttpInfo(
        $client,
        string $contentType = self::contentTypes['testClientModel'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'testClientModel'
     *
     * @param  \OpenAPI\Client\Model\Client $client client model (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testClientModel'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function testClientModelRequest(
        $client,
        string $contentType = self::contentTypes['testClientModel'][0]
    ): Request;
    /**
     * Operation testEndpointParameters
     *
     * Fake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트
     *
     * @param  float $number None (required)
     * @param  float $double None (required)
     * @param  string $pattern_without_delimiter None (required)
     * @param  string $byte None (required)
     * @param  int|null $integer None (optional)
     * @param  int|null $int32 None (optional)
     * @param  int|null $int64 None (optional)
     * @param  float|null $float None (optional)
     * @param  string|null $string None (optional)
     * @param  \SplFileObject|null $binary None (optional)
     * @param  \DateTime|null $date None (optional)
     * @param  \DateTime|null $date_time None (optional)
     * @param  string|null $password None (optional)
     * @param  string|null $callback None (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testEndpointParameters'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return void
     */
    public function testEndpointParameters(
        float $number,
        float $double,
        string $pattern_without_delimiter,
        string $byte,
        ?int $integer = null,
        ?int $int32 = null,
        ?int $int64 = null,
        ?float $float = null,
        ?string $string = null,
        ?\SplFileObject $binary = null,
        ?\DateTime $date = null,
        ?\DateTime $date_time = null,
        ?string $password = null,
        ?string $callback = null,
        string $contentType = self::contentTypes['testEndpointParameters'][0]
    ): void;

    /**
     * Operation testEndpointParametersWithHttpInfo
     *
     * Fake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트
     *
     * @param  float $number None (required)
     * @param  float $double None (required)
     * @param  string $pattern_without_delimiter None (required)
     * @param  string $byte None (required)
     * @param  int|null $integer None (optional)
     * @param  int|null $int32 None (optional)
     * @param  int|null $int64 None (optional)
     * @param  float|null $float None (optional)
     * @param  string|null $string None (optional)
     * @param  \SplFileObject|null $binary None (optional)
     * @param  \DateTime|null $date None (optional)
     * @param  \DateTime|null $date_time None (optional)
     * @param  string|null $password None (optional)
     * @param  string|null $callback None (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testEndpointParameters'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of null, HTTP status code, HTTP response headers (array of strings)
     */
    public function testEndpointParametersWithHttpInfo(
        float $number,
        float $double,
        string $pattern_without_delimiter,
        string $byte,
        ?int $integer = null,
        ?int $int32 = null,
        ?int $int64 = null,
        ?float $float = null,
        ?string $string = null,
        ?\SplFileObject $binary = null,
        ?\DateTime $date = null,
        ?\DateTime $date_time = null,
        ?string $password = null,
        ?string $callback = null,
        string $contentType = self::contentTypes['testEndpointParameters'][0]
    ): array;

    /**
     * Operation testEndpointParametersAsync
     *
     * Fake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트
     *
     * @param  float $number None (required)
     * @param  float $double None (required)
     * @param  string $pattern_without_delimiter None (required)
     * @param  string $byte None (required)
     * @param  int|null $integer None (optional)
     * @param  int|null $int32 None (optional)
     * @param  int|null $int64 None (optional)
     * @param  float|null $float None (optional)
     * @param  string|null $string None (optional)
     * @param  \SplFileObject|null $binary None (optional)
     * @param  \DateTime|null $date None (optional)
     * @param  \DateTime|null $date_time None (optional)
     * @param  string|null $password None (optional)
     * @param  string|null $callback None (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testEndpointParameters'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testEndpointParametersAsync(
        float $number,
        float $double,
        string $pattern_without_delimiter,
        string $byte,
        ?int $integer = null,
        ?int $int32 = null,
        ?int $int64 = null,
        ?float $float = null,
        ?string $string = null,
        ?\SplFileObject $binary = null,
        ?\DateTime $date = null,
        ?\DateTime $date_time = null,
        ?string $password = null,
        ?string $callback = null,
        string $contentType = self::contentTypes['testEndpointParameters'][0]
    ): PromiseInterface;

    /**
     * Operation testEndpointParametersAsyncWithHttpInfo
     *
     * Fake endpoint for testing various parameters 假端點 偽のエンドポイント 가짜 엔드 포인트
     *
     * @param  float $number None (required)
     * @param  float $double None (required)
     * @param  string $pattern_without_delimiter None (required)
     * @param  string $byte None (required)
     * @param  int|null $integer None (optional)
     * @param  int|null $int32 None (optional)
     * @param  int|null $int64 None (optional)
     * @param  float|null $float None (optional)
     * @param  string|null $string None (optional)
     * @param  \SplFileObject|null $binary None (optional)
     * @param  \DateTime|null $date None (optional)
     * @param  \DateTime|null $date_time None (optional)
     * @param  string|null $password None (optional)
     * @param  string|null $callback None (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testEndpointParameters'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testEndpointParametersAsyncWithHttpInfo(
        $number,
        $double,
        $pattern_without_delimiter,
        $byte,
        $integer = null,
        $int32 = null,
        $int64 = null,
        $float = null,
        $string = null,
        $binary = null,
        $date = null,
        $date_time = null,
        $password = null,
        $callback = null,
        string $contentType = self::contentTypes['testEndpointParameters'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'testEndpointParameters'
     *
     * @param  float $number None (required)
     * @param  float $double None (required)
     * @param  string $pattern_without_delimiter None (required)
     * @param  string $byte None (required)
     * @param  int|null $integer None (optional)
     * @param  int|null $int32 None (optional)
     * @param  int|null $int64 None (optional)
     * @param  float|null $float None (optional)
     * @param  string|null $string None (optional)
     * @param  \SplFileObject|null $binary None (optional)
     * @param  \DateTime|null $date None (optional)
     * @param  \DateTime|null $date_time None (optional)
     * @param  string|null $password None (optional)
     * @param  string|null $callback None (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testEndpointParameters'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function testEndpointParametersRequest(
        $number,
        $double,
        $pattern_without_delimiter,
        $byte,
        $integer = null,
        $int32 = null,
        $int64 = null,
        $float = null,
        $string = null,
        $binary = null,
        $date = null,
        $date_time = null,
        $password = null,
        $callback = null,
        string $contentType = self::contentTypes['testEndpointParameters'][0]
    ): Request;
    /**
     * Operation testEnumParameters
     *
     * To test enum parameters
     *
     * @param  string[]|null $enum_header_string_array Header parameter enum test (string array) (optional, default to ['$'])
     * @param  string|null $enum_header_string Header parameter enum test (string) (optional, default to '-efg')
     * @param  string[]|null $enum_query_string_array Query parameter enum test (string array) (optional, default to ['$'])
     * @param  string|null $enum_query_string Query parameter enum test (string) (optional, default to '-efg')
     * @param  int|null $enum_query_integer Query parameter enum test (double) (optional)
     * @param  float|null $enum_query_double Query parameter enum test (double) (optional)
     * @param  \OpenAPI\Client\Model\EnumClass[]|null $enum_query_model_array enum_query_model_array (optional)
     * @param  string[]|null $enum_form_string_array Form parameter enum test (string array) (optional, default to ['$'])
     * @param  string|null $enum_form_string Form parameter enum test (string) (optional, default to '-efg')
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testEnumParameters'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return void
     */
    public function testEnumParameters(
        ?array $enum_header_string_array = ['$'],
        ?string $enum_header_string = '-efg',
        ?array $enum_query_string_array = ['$'],
        ?string $enum_query_string = '-efg',
        ?int $enum_query_integer = null,
        ?float $enum_query_double = null,
        ?array $enum_query_model_array = null,
        ?array $enum_form_string_array = ['$'],
        ?string $enum_form_string = '-efg',
        string $contentType = self::contentTypes['testEnumParameters'][0]
    ): void;

    /**
     * Operation testEnumParametersWithHttpInfo
     *
     * To test enum parameters
     *
     * @param  string[]|null $enum_header_string_array Header parameter enum test (string array) (optional, default to ['$'])
     * @param  string|null $enum_header_string Header parameter enum test (string) (optional, default to '-efg')
     * @param  string[]|null $enum_query_string_array Query parameter enum test (string array) (optional, default to ['$'])
     * @param  string|null $enum_query_string Query parameter enum test (string) (optional, default to '-efg')
     * @param  int|null $enum_query_integer Query parameter enum test (double) (optional)
     * @param  float|null $enum_query_double Query parameter enum test (double) (optional)
     * @param  \OpenAPI\Client\Model\EnumClass[]|null $enum_query_model_array (optional)
     * @param  string[]|null $enum_form_string_array Form parameter enum test (string array) (optional, default to ['$'])
     * @param  string|null $enum_form_string Form parameter enum test (string) (optional, default to '-efg')
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testEnumParameters'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of null, HTTP status code, HTTP response headers (array of strings)
     */
    public function testEnumParametersWithHttpInfo(
        ?array $enum_header_string_array = ['$'],
        ?string $enum_header_string = '-efg',
        ?array $enum_query_string_array = ['$'],
        ?string $enum_query_string = '-efg',
        ?int $enum_query_integer = null,
        ?float $enum_query_double = null,
        ?array $enum_query_model_array = null,
        ?array $enum_form_string_array = ['$'],
        ?string $enum_form_string = '-efg',
        string $contentType = self::contentTypes['testEnumParameters'][0]
    ): array;

    /**
     * Operation testEnumParametersAsync
     *
     * To test enum parameters
     *
     * @param  string[]|null $enum_header_string_array Header parameter enum test (string array) (optional, default to ['$'])
     * @param  string|null $enum_header_string Header parameter enum test (string) (optional, default to '-efg')
     * @param  string[]|null $enum_query_string_array Query parameter enum test (string array) (optional, default to ['$'])
     * @param  string|null $enum_query_string Query parameter enum test (string) (optional, default to '-efg')
     * @param  int|null $enum_query_integer Query parameter enum test (double) (optional)
     * @param  float|null $enum_query_double Query parameter enum test (double) (optional)
     * @param  \OpenAPI\Client\Model\EnumClass[]|null $enum_query_model_array (optional)
     * @param  string[]|null $enum_form_string_array Form parameter enum test (string array) (optional, default to ['$'])
     * @param  string|null $enum_form_string Form parameter enum test (string) (optional, default to '-efg')
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testEnumParameters'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testEnumParametersAsync(
        ?array $enum_header_string_array = ['$'],
        ?string $enum_header_string = '-efg',
        ?array $enum_query_string_array = ['$'],
        ?string $enum_query_string = '-efg',
        ?int $enum_query_integer = null,
        ?float $enum_query_double = null,
        ?array $enum_query_model_array = null,
        ?array $enum_form_string_array = ['$'],
        ?string $enum_form_string = '-efg',
        string $contentType = self::contentTypes['testEnumParameters'][0]
    ): PromiseInterface;

    /**
     * Operation testEnumParametersAsyncWithHttpInfo
     *
     * To test enum parameters
     *
     * @param  string[]|null $enum_header_string_array Header parameter enum test (string array) (optional, default to ['$'])
     * @param  string|null $enum_header_string Header parameter enum test (string) (optional, default to '-efg')
     * @param  string[]|null $enum_query_string_array Query parameter enum test (string array) (optional, default to ['$'])
     * @param  string|null $enum_query_string Query parameter enum test (string) (optional, default to '-efg')
     * @param  int|null $enum_query_integer Query parameter enum test (double) (optional)
     * @param  float|null $enum_query_double Query parameter enum test (double) (optional)
     * @param  \OpenAPI\Client\Model\EnumClass[]|null $enum_query_model_array (optional)
     * @param  string[]|null $enum_form_string_array Form parameter enum test (string array) (optional, default to ['$'])
     * @param  string|null $enum_form_string Form parameter enum test (string) (optional, default to '-efg')
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testEnumParameters'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testEnumParametersAsyncWithHttpInfo(
        $enum_header_string_array = ['$'],
        $enum_header_string = '-efg',
        $enum_query_string_array = ['$'],
        $enum_query_string = '-efg',
        $enum_query_integer = null,
        $enum_query_double = null,
        $enum_query_model_array = null,
        $enum_form_string_array = ['$'],
        $enum_form_string = '-efg',
        string $contentType = self::contentTypes['testEnumParameters'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'testEnumParameters'
     *
     * @param  string[]|null $enum_header_string_array Header parameter enum test (string array) (optional, default to ['$'])
     * @param  string|null $enum_header_string Header parameter enum test (string) (optional, default to '-efg')
     * @param  string[]|null $enum_query_string_array Query parameter enum test (string array) (optional, default to ['$'])
     * @param  string|null $enum_query_string Query parameter enum test (string) (optional, default to '-efg')
     * @param  int|null $enum_query_integer Query parameter enum test (double) (optional)
     * @param  float|null $enum_query_double Query parameter enum test (double) (optional)
     * @param  \OpenAPI\Client\Model\EnumClass[]|null $enum_query_model_array (optional)
     * @param  string[]|null $enum_form_string_array Form parameter enum test (string array) (optional, default to ['$'])
     * @param  string|null $enum_form_string Form parameter enum test (string) (optional, default to '-efg')
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testEnumParameters'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function testEnumParametersRequest(
        $enum_header_string_array = ['$'],
        $enum_header_string = '-efg',
        $enum_query_string_array = ['$'],
        $enum_query_string = '-efg',
        $enum_query_integer = null,
        $enum_query_double = null,
        $enum_query_model_array = null,
        $enum_form_string_array = ['$'],
        $enum_form_string = '-efg',
        string $contentType = self::contentTypes['testEnumParameters'][0]
    ): Request;
    /**
     * Operation testGroupParameters
     *
     * Fake endpoint to test group parameters (optional)
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int $required_string_group Required String in group parameters (required)
     * @param  bool $required_boolean_group Required Boolean in group parameters (required)
     * @param  int $required_int64_group Required Integer in group parameters (required)
     * @param  int|null $string_group String in group parameters (optional)
     * @param  bool|null $boolean_group Boolean in group parameters (optional)
     * @param  int|null $int64_group Integer in group parameters (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testGroupParameters'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return void
     */
    public function testGroupParameters(
        array $associative_array
    ): void;

    /**
     * Operation testGroupParametersWithHttpInfo
     *
     * Fake endpoint to test group parameters (optional)
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int $required_string_group Required String in group parameters (required)
     * @param  bool $required_boolean_group Required Boolean in group parameters (required)
     * @param  int $required_int64_group Required Integer in group parameters (required)
     * @param  int|null $string_group String in group parameters (optional)
     * @param  bool|null $boolean_group Boolean in group parameters (optional)
     * @param  int|null $int64_group Integer in group parameters (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testGroupParameters'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of null, HTTP status code, HTTP response headers (array of strings)
     */
    public function testGroupParametersWithHttpInfo(
        array $associative_array
    ): array;

    /**
     * Operation testGroupParametersAsync
     *
     * Fake endpoint to test group parameters (optional)
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int $required_string_group Required String in group parameters (required)
     * @param  bool $required_boolean_group Required Boolean in group parameters (required)
     * @param  int $required_int64_group Required Integer in group parameters (required)
     * @param  int|null $string_group String in group parameters (optional)
     * @param  bool|null $boolean_group Boolean in group parameters (optional)
     * @param  int|null $int64_group Integer in group parameters (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testGroupParameters'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testGroupParametersAsync(
        array $associative_array
    ): PromiseInterface;

    /**
     * Operation testGroupParametersAsyncWithHttpInfo
     *
     * Fake endpoint to test group parameters (optional)
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int $required_string_group Required String in group parameters (required)
     * @param  bool $required_boolean_group Required Boolean in group parameters (required)
     * @param  int $required_int64_group Required Integer in group parameters (required)
     * @param  int|null $string_group String in group parameters (optional)
     * @param  bool|null $boolean_group Boolean in group parameters (optional)
     * @param  int|null $int64_group Integer in group parameters (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testGroupParameters'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testGroupParametersAsyncWithHttpInfo(
        array $associative_array
    ): PromiseInterface;

    /**
     * Create request for operation 'testGroupParameters'
     *
     * Note: the input parameter is an associative array with the keys listed as the parameter name below
     *
     * @param  int $required_string_group Required String in group parameters (required)
     * @param  bool $required_boolean_group Required Boolean in group parameters (required)
     * @param  int $required_int64_group Required Integer in group parameters (required)
     * @param  int|null $string_group String in group parameters (optional)
     * @param  bool|null $boolean_group Boolean in group parameters (optional)
     * @param  int|null $int64_group Integer in group parameters (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testGroupParameters'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function testGroupParametersRequest(
        array $associative_array
    ): Request;
    /**
     * Operation testInlineAdditionalProperties
     *
     * test inline additionalProperties
     *
     * @param  array<string,string> $request_body request body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testInlineAdditionalProperties'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return void
     */
    public function testInlineAdditionalProperties(
        array $request_body,
        string $contentType = self::contentTypes['testInlineAdditionalProperties'][0]
    ): void;

    /**
     * Operation testInlineAdditionalPropertiesWithHttpInfo
     *
     * test inline additionalProperties
     *
     * @param  array<string,string> $request_body request body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testInlineAdditionalProperties'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of null, HTTP status code, HTTP response headers (array of strings)
     */
    public function testInlineAdditionalPropertiesWithHttpInfo(
        array $request_body,
        string $contentType = self::contentTypes['testInlineAdditionalProperties'][0]
    ): array;

    /**
     * Operation testInlineAdditionalPropertiesAsync
     *
     * test inline additionalProperties
     *
     * @param  array<string,string> $request_body request body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testInlineAdditionalProperties'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testInlineAdditionalPropertiesAsync(
        array $request_body,
        string $contentType = self::contentTypes['testInlineAdditionalProperties'][0]
    ): PromiseInterface;

    /**
     * Operation testInlineAdditionalPropertiesAsyncWithHttpInfo
     *
     * test inline additionalProperties
     *
     * @param  array<string,string> $request_body request body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testInlineAdditionalProperties'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testInlineAdditionalPropertiesAsyncWithHttpInfo(
        $request_body,
        string $contentType = self::contentTypes['testInlineAdditionalProperties'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'testInlineAdditionalProperties'
     *
     * @param  array<string,string> $request_body request body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testInlineAdditionalProperties'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function testInlineAdditionalPropertiesRequest(
        $request_body,
        string $contentType = self::contentTypes['testInlineAdditionalProperties'][0]
    ): Request;
    /**
     * Operation testInlineFreeformAdditionalProperties
     *
     * test inline free-form additionalProperties
     *
     * @param  \OpenAPI\Client\Model\TestInlineFreeformAdditionalPropertiesRequest $test_inline_freeform_additional_properties_request request body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testInlineFreeformAdditionalProperties'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return void
     */
    public function testInlineFreeformAdditionalProperties(
        \OpenAPI\Client\Model\TestInlineFreeformAdditionalPropertiesRequest $test_inline_freeform_additional_properties_request,
        string $contentType = self::contentTypes['testInlineFreeformAdditionalProperties'][0]
    ): void;

    /**
     * Operation testInlineFreeformAdditionalPropertiesWithHttpInfo
     *
     * test inline free-form additionalProperties
     *
     * @param  \OpenAPI\Client\Model\TestInlineFreeformAdditionalPropertiesRequest $test_inline_freeform_additional_properties_request request body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testInlineFreeformAdditionalProperties'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of null, HTTP status code, HTTP response headers (array of strings)
     */
    public function testInlineFreeformAdditionalPropertiesWithHttpInfo(
        \OpenAPI\Client\Model\TestInlineFreeformAdditionalPropertiesRequest $test_inline_freeform_additional_properties_request,
        string $contentType = self::contentTypes['testInlineFreeformAdditionalProperties'][0]
    ): array;

    /**
     * Operation testInlineFreeformAdditionalPropertiesAsync
     *
     * test inline free-form additionalProperties
     *
     * @param  \OpenAPI\Client\Model\TestInlineFreeformAdditionalPropertiesRequest $test_inline_freeform_additional_properties_request request body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testInlineFreeformAdditionalProperties'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testInlineFreeformAdditionalPropertiesAsync(
        \OpenAPI\Client\Model\TestInlineFreeformAdditionalPropertiesRequest $test_inline_freeform_additional_properties_request,
        string $contentType = self::contentTypes['testInlineFreeformAdditionalProperties'][0]
    ): PromiseInterface;

    /**
     * Operation testInlineFreeformAdditionalPropertiesAsyncWithHttpInfo
     *
     * test inline free-form additionalProperties
     *
     * @param  \OpenAPI\Client\Model\TestInlineFreeformAdditionalPropertiesRequest $test_inline_freeform_additional_properties_request request body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testInlineFreeformAdditionalProperties'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testInlineFreeformAdditionalPropertiesAsyncWithHttpInfo(
        $test_inline_freeform_additional_properties_request,
        string $contentType = self::contentTypes['testInlineFreeformAdditionalProperties'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'testInlineFreeformAdditionalProperties'
     *
     * @param  \OpenAPI\Client\Model\TestInlineFreeformAdditionalPropertiesRequest $test_inline_freeform_additional_properties_request request body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testInlineFreeformAdditionalProperties'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function testInlineFreeformAdditionalPropertiesRequest(
        $test_inline_freeform_additional_properties_request,
        string $contentType = self::contentTypes['testInlineFreeformAdditionalProperties'][0]
    ): Request;
    /**
     * Operation testJsonFormData
     *
     * test json serialization of form data
     *
     * @param  string $param field1 (required)
     * @param  string $param2 field2 (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testJsonFormData'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return void
     */
    public function testJsonFormData(
        string $param,
        string $param2,
        string $contentType = self::contentTypes['testJsonFormData'][0]
    ): void;

    /**
     * Operation testJsonFormDataWithHttpInfo
     *
     * test json serialization of form data
     *
     * @param  string $param field1 (required)
     * @param  string $param2 field2 (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testJsonFormData'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of null, HTTP status code, HTTP response headers (array of strings)
     */
    public function testJsonFormDataWithHttpInfo(
        string $param,
        string $param2,
        string $contentType = self::contentTypes['testJsonFormData'][0]
    ): array;

    /**
     * Operation testJsonFormDataAsync
     *
     * test json serialization of form data
     *
     * @param  string $param field1 (required)
     * @param  string $param2 field2 (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testJsonFormData'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testJsonFormDataAsync(
        string $param,
        string $param2,
        string $contentType = self::contentTypes['testJsonFormData'][0]
    ): PromiseInterface;

    /**
     * Operation testJsonFormDataAsyncWithHttpInfo
     *
     * test json serialization of form data
     *
     * @param  string $param field1 (required)
     * @param  string $param2 field2 (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testJsonFormData'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testJsonFormDataAsyncWithHttpInfo(
        $param,
        $param2,
        string $contentType = self::contentTypes['testJsonFormData'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'testJsonFormData'
     *
     * @param  string $param field1 (required)
     * @param  string $param2 field2 (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testJsonFormData'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function testJsonFormDataRequest(
        $param,
        $param2,
        string $contentType = self::contentTypes['testJsonFormData'][0]
    ): Request;
    /**
     * Operation testNullable
     *
     * test nullable parent property
     *
     * @param  \OpenAPI\Client\Model\ChildWithNullable $child_with_nullable request body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testNullable'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return void
     */
    public function testNullable(
        \OpenAPI\Client\Model\ChildWithNullable $child_with_nullable,
        string $contentType = self::contentTypes['testNullable'][0]
    ): void;

    /**
     * Operation testNullableWithHttpInfo
     *
     * test nullable parent property
     *
     * @param  \OpenAPI\Client\Model\ChildWithNullable $child_with_nullable request body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testNullable'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of null, HTTP status code, HTTP response headers (array of strings)
     */
    public function testNullableWithHttpInfo(
        \OpenAPI\Client\Model\ChildWithNullable $child_with_nullable,
        string $contentType = self::contentTypes['testNullable'][0]
    ): array;

    /**
     * Operation testNullableAsync
     *
     * test nullable parent property
     *
     * @param  \OpenAPI\Client\Model\ChildWithNullable $child_with_nullable request body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testNullable'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testNullableAsync(
        \OpenAPI\Client\Model\ChildWithNullable $child_with_nullable,
        string $contentType = self::contentTypes['testNullable'][0]
    ): PromiseInterface;

    /**
     * Operation testNullableAsyncWithHttpInfo
     *
     * test nullable parent property
     *
     * @param  \OpenAPI\Client\Model\ChildWithNullable $child_with_nullable request body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testNullable'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testNullableAsyncWithHttpInfo(
        $child_with_nullable,
        string $contentType = self::contentTypes['testNullable'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'testNullable'
     *
     * @param  \OpenAPI\Client\Model\ChildWithNullable $child_with_nullable request body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testNullable'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function testNullableRequest(
        $child_with_nullable,
        string $contentType = self::contentTypes['testNullable'][0]
    ): Request;
    /**
     * Operation testQueryParameterCollectionFormat
     *
     * @param  string[] $pipe pipe (required)
     * @param  string[] $ioutil ioutil (required)
     * @param  string[] $http http (required)
     * @param  string[] $url url (required)
     * @param  string[] $context context (required)
     * @param  string $allow_empty allow_empty (required)
     * @param  array<string,string>|null $language language (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryParameterCollectionFormat'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return void
     */
    public function testQueryParameterCollectionFormat(
        array $pipe,
        array $ioutil,
        array $http,
        array $url,
        array $context,
        string $allow_empty,
        ?array $language = null,
        string $contentType = self::contentTypes['testQueryParameterCollectionFormat'][0]
    ): void;

    /**
     * Operation testQueryParameterCollectionFormatWithHttpInfo
     *
     * @param  string[] $pipe (required)
     * @param  string[] $ioutil (required)
     * @param  string[] $http (required)
     * @param  string[] $url (required)
     * @param  string[] $context (required)
     * @param  string $allow_empty (required)
     * @param  array<string,string>|null $language (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryParameterCollectionFormat'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of null, HTTP status code, HTTP response headers (array of strings)
     */
    public function testQueryParameterCollectionFormatWithHttpInfo(
        array $pipe,
        array $ioutil,
        array $http,
        array $url,
        array $context,
        string $allow_empty,
        ?array $language = null,
        string $contentType = self::contentTypes['testQueryParameterCollectionFormat'][0]
    ): array;

    /**
     * Operation testQueryParameterCollectionFormatAsync
     *
     * @param  string[] $pipe (required)
     * @param  string[] $ioutil (required)
     * @param  string[] $http (required)
     * @param  string[] $url (required)
     * @param  string[] $context (required)
     * @param  string $allow_empty (required)
     * @param  array<string,string>|null $language (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryParameterCollectionFormat'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testQueryParameterCollectionFormatAsync(
        array $pipe,
        array $ioutil,
        array $http,
        array $url,
        array $context,
        string $allow_empty,
        ?array $language = null,
        string $contentType = self::contentTypes['testQueryParameterCollectionFormat'][0]
    ): PromiseInterface;

    /**
     * Operation testQueryParameterCollectionFormatAsyncWithHttpInfo
     *
     * @param  string[] $pipe (required)
     * @param  string[] $ioutil (required)
     * @param  string[] $http (required)
     * @param  string[] $url (required)
     * @param  string[] $context (required)
     * @param  string $allow_empty (required)
     * @param  array<string,string>|null $language (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryParameterCollectionFormat'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testQueryParameterCollectionFormatAsyncWithHttpInfo(
        $pipe,
        $ioutil,
        $http,
        $url,
        $context,
        $allow_empty,
        $language = null,
        string $contentType = self::contentTypes['testQueryParameterCollectionFormat'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'testQueryParameterCollectionFormat'
     *
     * @param  string[] $pipe (required)
     * @param  string[] $ioutil (required)
     * @param  string[] $http (required)
     * @param  string[] $url (required)
     * @param  string[] $context (required)
     * @param  string $allow_empty (required)
     * @param  array<string,string>|null $language (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryParameterCollectionFormat'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function testQueryParameterCollectionFormatRequest(
        $pipe,
        $ioutil,
        $http,
        $url,
        $context,
        $allow_empty,
        $language = null,
        string $contentType = self::contentTypes['testQueryParameterCollectionFormat'][0]
    ): Request;
    /**
     * Operation testStringMapReference
     *
     * test referenced string map
     *
     * @param  array<string,string> $request_body request body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testStringMapReference'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return void
     */
    public function testStringMapReference(
        array $request_body,
        string $contentType = self::contentTypes['testStringMapReference'][0]
    ): void;

    /**
     * Operation testStringMapReferenceWithHttpInfo
     *
     * test referenced string map
     *
     * @param  array<string,string> $request_body request body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testStringMapReference'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of null, HTTP status code, HTTP response headers (array of strings)
     */
    public function testStringMapReferenceWithHttpInfo(
        array $request_body,
        string $contentType = self::contentTypes['testStringMapReference'][0]
    ): array;

    /**
     * Operation testStringMapReferenceAsync
     *
     * test referenced string map
     *
     * @param  array<string,string> $request_body request body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testStringMapReference'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testStringMapReferenceAsync(
        array $request_body,
        string $contentType = self::contentTypes['testStringMapReference'][0]
    ): PromiseInterface;

    /**
     * Operation testStringMapReferenceAsyncWithHttpInfo
     *
     * test referenced string map
     *
     * @param  array<string,string> $request_body request body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testStringMapReference'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testStringMapReferenceAsyncWithHttpInfo(
        $request_body,
        string $contentType = self::contentTypes['testStringMapReference'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'testStringMapReference'
     *
     * @param  array<string,string> $request_body request body (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testStringMapReference'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function testStringMapReferenceRequest(
        $request_body,
        string $contentType = self::contentTypes['testStringMapReference'][0]
    ): Request;
}
