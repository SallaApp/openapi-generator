<?php
/**
 * PetApiInterface
 * PHP version 8.1
 *
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * OpenAPI Petstore
 *
 * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
 *
 * The version of the OpenAPI document: 1.0.0
 * @generated Generated by: https://openapi-generator.tech
 * Generator version: 7.6.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Api;

use InvalidArgumentException;
use GuzzleHttp\Psr7\Request;
use GuzzleHttp\Promise\PromiseInterface;
use OpenAPI\Client\ApiException;
use OpenAPI\Client\Configuration;

/**
 * PetApi Class Doc Comment
 *
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
interface PetApiInterface
{
    /** @var string[] $contentTypes **/
    public const contentTypes = [
        'addPet' => [
            'application/json',
            'application/xml',
        ],
        'deletePet' => [
            'application/json',
        ],
        'findPetsByStatus' => [
            'application/json',
        ],
        'findPetsByTags' => [
            'application/json',
        ],
        'getPetById' => [
            'application/json',
        ],
        'updatePet' => [
            'application/json',
            'application/xml',
        ],
        'updatePetWithForm' => [
            'application/x-www-form-urlencoded',
        ],
        'uploadFile' => [
            'multipart/form-data',
        ],
        'uploadFileWithRequiredFile' => [
            'multipart/form-data',
        ],
    ];

    /**
     * Set the host index
     *
     * @param int $hostIndex Host index (required)
     */
    public function setHostIndex(int $hostIndex): void;

    /**
     * Get the host index
     *
     * @return int Host index
     */
    public function getHostIndex(): int;

    /**
     * @return Configuration
     */
    public function getConfig(): Configuration;

    /**
     * Operation addPet
     *
     * Add a new pet to the store
     *
     * This operation contains host(s) defined in the OpenAPI spec. Use 'hostIndex' to select the host.
     * if needed, use the 'variables' parameter to pass variables to the host.
     * URL: http://petstore.swagger.io/v2
     * URL: http://path-server-test.petstore.local/v2
     * URL: http://{server}.swagger.io:{port}/v2
     *  Variables:
     *    - server: target server
     *      Allowed values:
     *        - petstore
     *        - qa-petstore
     *        - dev-petstore
     *    - port:  No description provided
     *      Allowed values:
     *        - 80
     *        - 8080
     *
     * @param  \OpenAPI\Client\Model\Pet $pet Pet object that needs to be added to the store (required)
     * @param  null|int $hostIndex Host index. Defaults to null. If null, then the library will use $this->hostIndex instead
     * @param  array $variables Associative array of variables to pass to the host. Defaults to empty array.
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['addPet'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return void
     */
    public function addPet(
        \OpenAPI\Client\Model\Pet $pet,
        ?int $hostIndex = null,
        array $variables = [],
        string $contentType = self::contentTypes['addPet'][0]
    ): void;

    /**
     * Operation addPetWithHttpInfo
     *
     * Add a new pet to the store
     *
     * This operation contains host(s) defined in the OpenAPI spec. Use 'hostIndex' to select the host.
     * if needed, use the 'variables' parameter to pass variables to the host.
     * URL: http://petstore.swagger.io/v2
     * URL: http://path-server-test.petstore.local/v2
     * URL: http://{server}.swagger.io:{port}/v2
     *  Variables:
     *    - server: target server
     *      Allowed values:
     *        - petstore
     *        - qa-petstore
     *        - dev-petstore
     *    - port:  No description provided
     *      Allowed values:
     *        - 80
     *        - 8080
     *
     * @param  \OpenAPI\Client\Model\Pet $pet Pet object that needs to be added to the store (required)
     * @param  null|int $hostIndex Host index. Defaults to null. If null, then the library will use $this->hostIndex instead
     * @param  array $variables Associative array of variables to pass to the host. Defaults to empty array.
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['addPet'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of null, HTTP status code, HTTP response headers (array of strings)
     */
    public function addPetWithHttpInfo(
        \OpenAPI\Client\Model\Pet $pet,
        ?int $hostIndex = null,
        array $variables = [],
        string $contentType = self::contentTypes['addPet'][0]
    ): array;

    /**
     * Operation addPetAsync
     *
     * Add a new pet to the store
     *
     * This operation contains host(s) defined in the OpenAPI spec. Use 'hostIndex' to select the host.
     * if needed, use the 'variables' parameter to pass variables to the host.
     * URL: http://petstore.swagger.io/v2
     * URL: http://path-server-test.petstore.local/v2
     * URL: http://{server}.swagger.io:{port}/v2
     *  Variables:
     *    - server: target server
     *      Allowed values:
     *        - petstore
     *        - qa-petstore
     *        - dev-petstore
     *    - port:  No description provided
     *      Allowed values:
     *        - 80
     *        - 8080
     *
     * @param  \OpenAPI\Client\Model\Pet $pet Pet object that needs to be added to the store (required)
     * @param  null|int $hostIndex Host index. Defaults to null. If null, then the library will use $this->hostIndex instead
     * @param  array $variables Associative array of variables to pass to the host. Defaults to empty array.
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['addPet'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function addPetAsync(
        \OpenAPI\Client\Model\Pet $pet,
        ?int $hostIndex = null,
        array $variables = [],
        string $contentType = self::contentTypes['addPet'][0]
    ): PromiseInterface;

    /**
     * Operation addPetAsyncWithHttpInfo
     *
     * Add a new pet to the store
     *
     * This operation contains host(s) defined in the OpenAPI spec. Use 'hostIndex' to select the host.
     * if needed, use the 'variables' parameter to pass variables to the host.
     * URL: http://petstore.swagger.io/v2
     * URL: http://path-server-test.petstore.local/v2
     * URL: http://{server}.swagger.io:{port}/v2
     *  Variables:
     *    - server: target server
     *      Allowed values:
     *        - petstore
     *        - qa-petstore
     *        - dev-petstore
     *    - port:  No description provided
     *      Allowed values:
     *        - 80
     *        - 8080
     *
     * @param  \OpenAPI\Client\Model\Pet $pet Pet object that needs to be added to the store (required)
     * @param  null|int $hostIndex Host index. Defaults to null. If null, then the library will use $this->hostIndex instead
     * @param  array $variables Associative array of variables to pass to the host. Defaults to empty array.
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['addPet'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function addPetAsyncWithHttpInfo(
        $pet,
        ?int $hostIndex = null,
        array $variables = [],
        string $contentType = self::contentTypes['addPet'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'addPet'
     *
    * This operation contains host(s) defined in the OpenAPI spec. Use 'hostIndex' to select the host.
    * if needed, use the 'variables' parameter to pass variables to the host.
     * URL: http://petstore.swagger.io/v2
     * URL: http://path-server-test.petstore.local/v2
     * URL: http://{server}.swagger.io:{port}/v2
     *  Variables:
    *    - server: target server
     *      Allowed values:
     *        - petstore
     *        - qa-petstore
     *        - dev-petstore
    *    - port:  No description provided
     *      Allowed values:
     *        - 80
     *        - 8080
     *
     * @param  \OpenAPI\Client\Model\Pet $pet Pet object that needs to be added to the store (required)
     * @param  null|int $hostIndex Host index. Defaults to null. If null, then the library will use $this->hostIndex instead
     * @param  array $variables Associative array of variables to pass to the host. Defaults to empty array.
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['addPet'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function addPetRequest(
        $pet,
        ?int $hostIndex = null,
        array $variables = [],
        string $contentType = self::contentTypes['addPet'][0]
    ): Request;
    /**
     * Operation deletePet
     *
     * Deletes a pet
     *
     * @param  int $pet_id Pet id to delete (required)
     * @param  string|null $api_key api_key (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['deletePet'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return void
     */
    public function deletePet(
        int $pet_id,
        ?string $api_key = null,
        string $contentType = self::contentTypes['deletePet'][0]
    ): void;

    /**
     * Operation deletePetWithHttpInfo
     *
     * Deletes a pet
     *
     * @param  int $pet_id Pet id to delete (required)
     * @param  string|null $api_key (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['deletePet'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of null, HTTP status code, HTTP response headers (array of strings)
     */
    public function deletePetWithHttpInfo(
        int $pet_id,
        ?string $api_key = null,
        string $contentType = self::contentTypes['deletePet'][0]
    ): array;

    /**
     * Operation deletePetAsync
     *
     * Deletes a pet
     *
     * @param  int $pet_id Pet id to delete (required)
     * @param  string|null $api_key (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['deletePet'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function deletePetAsync(
        int $pet_id,
        ?string $api_key = null,
        string $contentType = self::contentTypes['deletePet'][0]
    ): PromiseInterface;

    /**
     * Operation deletePetAsyncWithHttpInfo
     *
     * Deletes a pet
     *
     * @param  int $pet_id Pet id to delete (required)
     * @param  string|null $api_key (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['deletePet'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function deletePetAsyncWithHttpInfo(
        $pet_id,
        $api_key = null,
        string $contentType = self::contentTypes['deletePet'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'deletePet'
     *
     * @param  int $pet_id Pet id to delete (required)
     * @param  string|null $api_key (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['deletePet'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function deletePetRequest(
        $pet_id,
        $api_key = null,
        string $contentType = self::contentTypes['deletePet'][0]
    ): Request;
    /**
     * Operation findPetsByStatus
     *
     * Finds Pets by status
     *
     * @param  string[] $status Status values that need to be considered for filter (required) (deprecated)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['findPetsByStatus'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return \OpenAPI\Client\Model\Pet[]
     */
    public function findPetsByStatus(
        array $status,
        string $contentType = self::contentTypes['findPetsByStatus'][0]
    ): array;

    /**
     * Operation findPetsByStatusWithHttpInfo
     *
     * Finds Pets by status
     *
     * @param  string[] $status Status values that need to be considered for filter (required) (deprecated)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['findPetsByStatus'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of \OpenAPI\Client\Model\Pet[], HTTP status code, HTTP response headers (array of strings)
     */
    public function findPetsByStatusWithHttpInfo(
        array $status,
        string $contentType = self::contentTypes['findPetsByStatus'][0]
    ): array;

    /**
     * Operation findPetsByStatusAsync
     *
     * Finds Pets by status
     *
     * @param  string[] $status Status values that need to be considered for filter (required) (deprecated)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['findPetsByStatus'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function findPetsByStatusAsync(
        array $status,
        string $contentType = self::contentTypes['findPetsByStatus'][0]
    ): PromiseInterface;

    /**
     * Operation findPetsByStatusAsyncWithHttpInfo
     *
     * Finds Pets by status
     *
     * @param  string[] $status Status values that need to be considered for filter (required) (deprecated)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['findPetsByStatus'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function findPetsByStatusAsyncWithHttpInfo(
        $status,
        string $contentType = self::contentTypes['findPetsByStatus'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'findPetsByStatus'
     *
     * @param  string[] $status Status values that need to be considered for filter (required) (deprecated)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['findPetsByStatus'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function findPetsByStatusRequest(
        $status,
        string $contentType = self::contentTypes['findPetsByStatus'][0]
    ): Request;
    /**
     * Operation findPetsByTags
     *
     * Finds Pets by tags
     *
     * @param  string[] $tags Tags to filter by (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['findPetsByTags'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return \OpenAPI\Client\Model\Pet[]
     * @deprecated
     */
    public function findPetsByTags(
        array $tags,
        string $contentType = self::contentTypes['findPetsByTags'][0]
    ): array;

    /**
     * Operation findPetsByTagsWithHttpInfo
     *
     * Finds Pets by tags
     *
     * @param  string[] $tags Tags to filter by (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['findPetsByTags'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of \OpenAPI\Client\Model\Pet[], HTTP status code, HTTP response headers (array of strings)
     * @deprecated
     */
    public function findPetsByTagsWithHttpInfo(
        array $tags,
        string $contentType = self::contentTypes['findPetsByTags'][0]
    ): array;

    /**
     * Operation findPetsByTagsAsync
     *
     * Finds Pets by tags
     *
     * @param  string[] $tags Tags to filter by (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['findPetsByTags'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     * @deprecated
     */
    public function findPetsByTagsAsync(
        array $tags,
        string $contentType = self::contentTypes['findPetsByTags'][0]
    ): PromiseInterface;

    /**
     * Operation findPetsByTagsAsyncWithHttpInfo
     *
     * Finds Pets by tags
     *
     * @param  string[] $tags Tags to filter by (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['findPetsByTags'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     * @deprecated
     */
    public function findPetsByTagsAsyncWithHttpInfo(
        $tags,
        string $contentType = self::contentTypes['findPetsByTags'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'findPetsByTags'
     *
     * @param  string[] $tags Tags to filter by (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['findPetsByTags'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     * @deprecated
     */
    public function findPetsByTagsRequest(
        $tags,
        string $contentType = self::contentTypes['findPetsByTags'][0]
    ): Request;
    /**
     * Operation getPetById
     *
     * Find pet by ID
     *
     * @param  int $pet_id ID of pet to return (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['getPetById'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return \OpenAPI\Client\Model\Pet
     */
    public function getPetById(
        int $pet_id,
        string $contentType = self::contentTypes['getPetById'][0]
    ): \OpenAPI\Client\Model\Pet;

    /**
     * Operation getPetByIdWithHttpInfo
     *
     * Find pet by ID
     *
     * @param  int $pet_id ID of pet to return (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['getPetById'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of \OpenAPI\Client\Model\Pet, HTTP status code, HTTP response headers (array of strings)
     */
    public function getPetByIdWithHttpInfo(
        int $pet_id,
        string $contentType = self::contentTypes['getPetById'][0]
    ): array;

    /**
     * Operation getPetByIdAsync
     *
     * Find pet by ID
     *
     * @param  int $pet_id ID of pet to return (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['getPetById'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function getPetByIdAsync(
        int $pet_id,
        string $contentType = self::contentTypes['getPetById'][0]
    ): PromiseInterface;

    /**
     * Operation getPetByIdAsyncWithHttpInfo
     *
     * Find pet by ID
     *
     * @param  int $pet_id ID of pet to return (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['getPetById'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function getPetByIdAsyncWithHttpInfo(
        $pet_id,
        string $contentType = self::contentTypes['getPetById'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'getPetById'
     *
     * @param  int $pet_id ID of pet to return (required)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['getPetById'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function getPetByIdRequest(
        $pet_id,
        string $contentType = self::contentTypes['getPetById'][0]
    ): Request;
    /**
     * Operation updatePet
     *
     * Update an existing pet
     *
     * This operation contains host(s) defined in the OpenAPI spec. Use 'hostIndex' to select the host.
     * if needed, use the 'variables' parameter to pass variables to the host.
     * URL: http://petstore.swagger.io/v2
     * URL: http://path-server-test.petstore.local/v2
     * URL: http://{server}.swagger.io:{port}/v2
     *  Variables:
     *    - server: target server
     *      Allowed values:
     *        - petstore
     *        - qa-petstore
     *        - dev-petstore
     *    - port:  No description provided
     *      Allowed values:
     *        - 80
     *        - 8080
     *
     * @param  \OpenAPI\Client\Model\Pet $pet Pet object that needs to be added to the store (required)
     * @param  null|int $hostIndex Host index. Defaults to null. If null, then the library will use $this->hostIndex instead
     * @param  array $variables Associative array of variables to pass to the host. Defaults to empty array.
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['updatePet'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return void
     */
    public function updatePet(
        \OpenAPI\Client\Model\Pet $pet,
        ?int $hostIndex = null,
        array $variables = [],
        string $contentType = self::contentTypes['updatePet'][0]
    ): void;

    /**
     * Operation updatePetWithHttpInfo
     *
     * Update an existing pet
     *
     * This operation contains host(s) defined in the OpenAPI spec. Use 'hostIndex' to select the host.
     * if needed, use the 'variables' parameter to pass variables to the host.
     * URL: http://petstore.swagger.io/v2
     * URL: http://path-server-test.petstore.local/v2
     * URL: http://{server}.swagger.io:{port}/v2
     *  Variables:
     *    - server: target server
     *      Allowed values:
     *        - petstore
     *        - qa-petstore
     *        - dev-petstore
     *    - port:  No description provided
     *      Allowed values:
     *        - 80
     *        - 8080
     *
     * @param  \OpenAPI\Client\Model\Pet $pet Pet object that needs to be added to the store (required)
     * @param  null|int $hostIndex Host index. Defaults to null. If null, then the library will use $this->hostIndex instead
     * @param  array $variables Associative array of variables to pass to the host. Defaults to empty array.
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['updatePet'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of null, HTTP status code, HTTP response headers (array of strings)
     */
    public function updatePetWithHttpInfo(
        \OpenAPI\Client\Model\Pet $pet,
        ?int $hostIndex = null,
        array $variables = [],
        string $contentType = self::contentTypes['updatePet'][0]
    ): array;

    /**
     * Operation updatePetAsync
     *
     * Update an existing pet
     *
     * This operation contains host(s) defined in the OpenAPI spec. Use 'hostIndex' to select the host.
     * if needed, use the 'variables' parameter to pass variables to the host.
     * URL: http://petstore.swagger.io/v2
     * URL: http://path-server-test.petstore.local/v2
     * URL: http://{server}.swagger.io:{port}/v2
     *  Variables:
     *    - server: target server
     *      Allowed values:
     *        - petstore
     *        - qa-petstore
     *        - dev-petstore
     *    - port:  No description provided
     *      Allowed values:
     *        - 80
     *        - 8080
     *
     * @param  \OpenAPI\Client\Model\Pet $pet Pet object that needs to be added to the store (required)
     * @param  null|int $hostIndex Host index. Defaults to null. If null, then the library will use $this->hostIndex instead
     * @param  array $variables Associative array of variables to pass to the host. Defaults to empty array.
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['updatePet'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function updatePetAsync(
        \OpenAPI\Client\Model\Pet $pet,
        ?int $hostIndex = null,
        array $variables = [],
        string $contentType = self::contentTypes['updatePet'][0]
    ): PromiseInterface;

    /**
     * Operation updatePetAsyncWithHttpInfo
     *
     * Update an existing pet
     *
     * This operation contains host(s) defined in the OpenAPI spec. Use 'hostIndex' to select the host.
     * if needed, use the 'variables' parameter to pass variables to the host.
     * URL: http://petstore.swagger.io/v2
     * URL: http://path-server-test.petstore.local/v2
     * URL: http://{server}.swagger.io:{port}/v2
     *  Variables:
     *    - server: target server
     *      Allowed values:
     *        - petstore
     *        - qa-petstore
     *        - dev-petstore
     *    - port:  No description provided
     *      Allowed values:
     *        - 80
     *        - 8080
     *
     * @param  \OpenAPI\Client\Model\Pet $pet Pet object that needs to be added to the store (required)
     * @param  null|int $hostIndex Host index. Defaults to null. If null, then the library will use $this->hostIndex instead
     * @param  array $variables Associative array of variables to pass to the host. Defaults to empty array.
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['updatePet'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function updatePetAsyncWithHttpInfo(
        $pet,
        ?int $hostIndex = null,
        array $variables = [],
        string $contentType = self::contentTypes['updatePet'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'updatePet'
     *
    * This operation contains host(s) defined in the OpenAPI spec. Use 'hostIndex' to select the host.
    * if needed, use the 'variables' parameter to pass variables to the host.
     * URL: http://petstore.swagger.io/v2
     * URL: http://path-server-test.petstore.local/v2
     * URL: http://{server}.swagger.io:{port}/v2
     *  Variables:
    *    - server: target server
     *      Allowed values:
     *        - petstore
     *        - qa-petstore
     *        - dev-petstore
    *    - port:  No description provided
     *      Allowed values:
     *        - 80
     *        - 8080
     *
     * @param  \OpenAPI\Client\Model\Pet $pet Pet object that needs to be added to the store (required)
     * @param  null|int $hostIndex Host index. Defaults to null. If null, then the library will use $this->hostIndex instead
     * @param  array $variables Associative array of variables to pass to the host. Defaults to empty array.
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['updatePet'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function updatePetRequest(
        $pet,
        ?int $hostIndex = null,
        array $variables = [],
        string $contentType = self::contentTypes['updatePet'][0]
    ): Request;
    /**
     * Operation updatePetWithForm
     *
     * Updates a pet in the store with form data
     *
     * @param  int $pet_id ID of pet that needs to be updated (required)
     * @param  string|null $name Updated name of the pet (optional)
     * @param  string|null $status Updated status of the pet (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['updatePetWithForm'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return void
     */
    public function updatePetWithForm(
        int $pet_id,
        ?string $name = null,
        ?string $status = null,
        string $contentType = self::contentTypes['updatePetWithForm'][0]
    ): void;

    /**
     * Operation updatePetWithFormWithHttpInfo
     *
     * Updates a pet in the store with form data
     *
     * @param  int $pet_id ID of pet that needs to be updated (required)
     * @param  string|null $name Updated name of the pet (optional)
     * @param  string|null $status Updated status of the pet (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['updatePetWithForm'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of null, HTTP status code, HTTP response headers (array of strings)
     */
    public function updatePetWithFormWithHttpInfo(
        int $pet_id,
        ?string $name = null,
        ?string $status = null,
        string $contentType = self::contentTypes['updatePetWithForm'][0]
    ): array;

    /**
     * Operation updatePetWithFormAsync
     *
     * Updates a pet in the store with form data
     *
     * @param  int $pet_id ID of pet that needs to be updated (required)
     * @param  string|null $name Updated name of the pet (optional)
     * @param  string|null $status Updated status of the pet (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['updatePetWithForm'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function updatePetWithFormAsync(
        int $pet_id,
        ?string $name = null,
        ?string $status = null,
        string $contentType = self::contentTypes['updatePetWithForm'][0]
    ): PromiseInterface;

    /**
     * Operation updatePetWithFormAsyncWithHttpInfo
     *
     * Updates a pet in the store with form data
     *
     * @param  int $pet_id ID of pet that needs to be updated (required)
     * @param  string|null $name Updated name of the pet (optional)
     * @param  string|null $status Updated status of the pet (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['updatePetWithForm'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function updatePetWithFormAsyncWithHttpInfo(
        $pet_id,
        $name = null,
        $status = null,
        string $contentType = self::contentTypes['updatePetWithForm'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'updatePetWithForm'
     *
     * @param  int $pet_id ID of pet that needs to be updated (required)
     * @param  string|null $name Updated name of the pet (optional)
     * @param  string|null $status Updated status of the pet (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['updatePetWithForm'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function updatePetWithFormRequest(
        $pet_id,
        $name = null,
        $status = null,
        string $contentType = self::contentTypes['updatePetWithForm'][0]
    ): Request;
    /**
     * Operation uploadFile
     *
     * uploads an image
     *
     * @param  int $pet_id ID of pet to update (required)
     * @param  string|null $additional_metadata Additional data to pass to server (optional)
     * @param  \SplFileObject|null $file file to upload (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['uploadFile'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return \OpenAPI\Client\Model\ApiResponse
     */
    public function uploadFile(
        int $pet_id,
        ?string $additional_metadata = null,
        ?\SplFileObject $file = null,
        string $contentType = self::contentTypes['uploadFile'][0]
    ): \OpenAPI\Client\Model\ApiResponse;

    /**
     * Operation uploadFileWithHttpInfo
     *
     * uploads an image
     *
     * @param  int $pet_id ID of pet to update (required)
     * @param  string|null $additional_metadata Additional data to pass to server (optional)
     * @param  \SplFileObject|null $file file to upload (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['uploadFile'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of \OpenAPI\Client\Model\ApiResponse, HTTP status code, HTTP response headers (array of strings)
     */
    public function uploadFileWithHttpInfo(
        int $pet_id,
        ?string $additional_metadata = null,
        ?\SplFileObject $file = null,
        string $contentType = self::contentTypes['uploadFile'][0]
    ): array;

    /**
     * Operation uploadFileAsync
     *
     * uploads an image
     *
     * @param  int $pet_id ID of pet to update (required)
     * @param  string|null $additional_metadata Additional data to pass to server (optional)
     * @param  \SplFileObject|null $file file to upload (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['uploadFile'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function uploadFileAsync(
        int $pet_id,
        ?string $additional_metadata = null,
        ?\SplFileObject $file = null,
        string $contentType = self::contentTypes['uploadFile'][0]
    ): PromiseInterface;

    /**
     * Operation uploadFileAsyncWithHttpInfo
     *
     * uploads an image
     *
     * @param  int $pet_id ID of pet to update (required)
     * @param  string|null $additional_metadata Additional data to pass to server (optional)
     * @param  \SplFileObject|null $file file to upload (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['uploadFile'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function uploadFileAsyncWithHttpInfo(
        $pet_id,
        $additional_metadata = null,
        $file = null,
        string $contentType = self::contentTypes['uploadFile'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'uploadFile'
     *
     * @param  int $pet_id ID of pet to update (required)
     * @param  string|null $additional_metadata Additional data to pass to server (optional)
     * @param  \SplFileObject|null $file file to upload (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['uploadFile'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function uploadFileRequest(
        $pet_id,
        $additional_metadata = null,
        $file = null,
        string $contentType = self::contentTypes['uploadFile'][0]
    ): Request;
    /**
     * Operation uploadFileWithRequiredFile
     *
     * uploads an image (required)
     *
     * @param  int $pet_id ID of pet to update (required)
     * @param  \SplFileObject $required_file file to upload (required)
     * @param  string|null $additional_metadata Additional data to pass to server (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['uploadFileWithRequiredFile'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return \OpenAPI\Client\Model\ApiResponse
     */
    public function uploadFileWithRequiredFile(
        int $pet_id,
        \SplFileObject $required_file,
        ?string $additional_metadata = null,
        string $contentType = self::contentTypes['uploadFileWithRequiredFile'][0]
    ): \OpenAPI\Client\Model\ApiResponse;

    /**
     * Operation uploadFileWithRequiredFileWithHttpInfo
     *
     * uploads an image (required)
     *
     * @param  int $pet_id ID of pet to update (required)
     * @param  \SplFileObject $required_file file to upload (required)
     * @param  string|null $additional_metadata Additional data to pass to server (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['uploadFileWithRequiredFile'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of \OpenAPI\Client\Model\ApiResponse, HTTP status code, HTTP response headers (array of strings)
     */
    public function uploadFileWithRequiredFileWithHttpInfo(
        int $pet_id,
        \SplFileObject $required_file,
        ?string $additional_metadata = null,
        string $contentType = self::contentTypes['uploadFileWithRequiredFile'][0]
    ): array;

    /**
     * Operation uploadFileWithRequiredFileAsync
     *
     * uploads an image (required)
     *
     * @param  int $pet_id ID of pet to update (required)
     * @param  \SplFileObject $required_file file to upload (required)
     * @param  string|null $additional_metadata Additional data to pass to server (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['uploadFileWithRequiredFile'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function uploadFileWithRequiredFileAsync(
        int $pet_id,
        \SplFileObject $required_file,
        ?string $additional_metadata = null,
        string $contentType = self::contentTypes['uploadFileWithRequiredFile'][0]
    ): PromiseInterface;

    /**
     * Operation uploadFileWithRequiredFileAsyncWithHttpInfo
     *
     * uploads an image (required)
     *
     * @param  int $pet_id ID of pet to update (required)
     * @param  \SplFileObject $required_file file to upload (required)
     * @param  string|null $additional_metadata Additional data to pass to server (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['uploadFileWithRequiredFile'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function uploadFileWithRequiredFileAsyncWithHttpInfo(
        $pet_id,
        $required_file,
        $additional_metadata = null,
        string $contentType = self::contentTypes['uploadFileWithRequiredFile'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'uploadFileWithRequiredFile'
     *
     * @param  int $pet_id ID of pet to update (required)
     * @param  \SplFileObject $required_file file to upload (required)
     * @param  string|null $additional_metadata Additional data to pass to server (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['uploadFileWithRequiredFile'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function uploadFileWithRequiredFileRequest(
        $pet_id,
        $required_file,
        $additional_metadata = null,
        string $contentType = self::contentTypes['uploadFileWithRequiredFile'][0]
    ): Request;
}
