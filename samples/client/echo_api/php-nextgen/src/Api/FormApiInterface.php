<?php
/**
 * FormApiInterface
 * PHP version 8.1
 *
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Echo Server API
 *
 * Echo Server API
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: team@openapitools.org
 * @generated Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.3.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Api;

use InvalidArgumentException;
use GuzzleHttp\Psr7\Request;
use GuzzleHttp\Promise\PromiseInterface;
use OpenAPI\Client\ApiException;
use OpenAPI\Client\Configuration;

/**
 * FormApi Class Doc Comment
 *
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
interface FormApiInterface
{
    /** @var string[] $contentTypes **/
    public const contentTypes = [
        'testFormIntegerBooleanString' => [
            'application/x-www-form-urlencoded',
        ],
        'testFormOneof' => [
            'application/x-www-form-urlencoded',
        ],
    ];

    /**
     * Set the host index
     *
     * @param int $hostIndex Host index (required)
     */
    public function setHostIndex(int $hostIndex): void;

    /**
     * Get the host index
     *
     * @return int Host index
     */
    public function getHostIndex(): int;

    /**
     * @return Configuration
     */
    public function getConfig(): Configuration;

    /**
     * Operation testFormIntegerBooleanString
     *
     * Test form parameter(s)
     *
     * @param  int|null $integer_form integer_form (optional)
     * @param  bool|null $boolean_form boolean_form (optional)
     * @param  string|null $string_form string_form (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testFormIntegerBooleanString'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return string
     */
    public function testFormIntegerBooleanString(
        ?int $integer_form = null,
        ?bool $boolean_form = null,
        ?string $string_form = null,
        string $contentType = self::contentTypes['testFormIntegerBooleanString'][0]
    ): string;

    /**
     * Operation testFormIntegerBooleanStringWithHttpInfo
     *
     * Test form parameter(s)
     *
     * @param  int|null $integer_form (optional)
     * @param  bool|null $boolean_form (optional)
     * @param  string|null $string_form (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testFormIntegerBooleanString'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of string, HTTP status code, HTTP response headers (array of strings)
     */
    public function testFormIntegerBooleanStringWithHttpInfo(
        ?int $integer_form = null,
        ?bool $boolean_form = null,
        ?string $string_form = null,
        string $contentType = self::contentTypes['testFormIntegerBooleanString'][0]
    ): array;

    /**
     * Operation testFormIntegerBooleanStringAsync
     *
     * Test form parameter(s)
     *
     * @param  int|null $integer_form (optional)
     * @param  bool|null $boolean_form (optional)
     * @param  string|null $string_form (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testFormIntegerBooleanString'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testFormIntegerBooleanStringAsync(
        ?int $integer_form = null,
        ?bool $boolean_form = null,
        ?string $string_form = null,
        string $contentType = self::contentTypes['testFormIntegerBooleanString'][0]
    ): PromiseInterface;

    /**
     * Operation testFormIntegerBooleanStringAsyncWithHttpInfo
     *
     * Test form parameter(s)
     *
     * @param  int|null $integer_form (optional)
     * @param  bool|null $boolean_form (optional)
     * @param  string|null $string_form (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testFormIntegerBooleanString'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testFormIntegerBooleanStringAsyncWithHttpInfo(
        $integer_form = null,
        $boolean_form = null,
        $string_form = null,
        string $contentType = self::contentTypes['testFormIntegerBooleanString'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'testFormIntegerBooleanString'
     *
     * @param  int|null $integer_form (optional)
     * @param  bool|null $boolean_form (optional)
     * @param  string|null $string_form (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testFormIntegerBooleanString'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function testFormIntegerBooleanStringRequest(
        $integer_form = null,
        $boolean_form = null,
        $string_form = null,
        string $contentType = self::contentTypes['testFormIntegerBooleanString'][0]
    ): Request;
    /**
     * Operation testFormOneof
     *
     * Test form parameter(s) for oneOf schema
     *
     * @param  string|null $form1 form1 (optional)
     * @param  int|null $form2 form2 (optional)
     * @param  string|null $form3 form3 (optional)
     * @param  bool|null $form4 form4 (optional)
     * @param  int|null $id id (optional)
     * @param  string|null $name name (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testFormOneof'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return string
     */
    public function testFormOneof(
        ?string $form1 = null,
        ?int $form2 = null,
        ?string $form3 = null,
        ?bool $form4 = null,
        ?int $id = null,
        ?string $name = null,
        string $contentType = self::contentTypes['testFormOneof'][0]
    ): string;

    /**
     * Operation testFormOneofWithHttpInfo
     *
     * Test form parameter(s) for oneOf schema
     *
     * @param  string|null $form1 (optional)
     * @param  int|null $form2 (optional)
     * @param  string|null $form3 (optional)
     * @param  bool|null $form4 (optional)
     * @param  int|null $id (optional)
     * @param  string|null $name (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testFormOneof'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of string, HTTP status code, HTTP response headers (array of strings)
     */
    public function testFormOneofWithHttpInfo(
        ?string $form1 = null,
        ?int $form2 = null,
        ?string $form3 = null,
        ?bool $form4 = null,
        ?int $id = null,
        ?string $name = null,
        string $contentType = self::contentTypes['testFormOneof'][0]
    ): array;

    /**
     * Operation testFormOneofAsync
     *
     * Test form parameter(s) for oneOf schema
     *
     * @param  string|null $form1 (optional)
     * @param  int|null $form2 (optional)
     * @param  string|null $form3 (optional)
     * @param  bool|null $form4 (optional)
     * @param  int|null $id (optional)
     * @param  string|null $name (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testFormOneof'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testFormOneofAsync(
        ?string $form1 = null,
        ?int $form2 = null,
        ?string $form3 = null,
        ?bool $form4 = null,
        ?int $id = null,
        ?string $name = null,
        string $contentType = self::contentTypes['testFormOneof'][0]
    ): PromiseInterface;

    /**
     * Operation testFormOneofAsyncWithHttpInfo
     *
     * Test form parameter(s) for oneOf schema
     *
     * @param  string|null $form1 (optional)
     * @param  int|null $form2 (optional)
     * @param  string|null $form3 (optional)
     * @param  bool|null $form4 (optional)
     * @param  int|null $id (optional)
     * @param  string|null $name (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testFormOneof'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testFormOneofAsyncWithHttpInfo(
        $form1 = null,
        $form2 = null,
        $form3 = null,
        $form4 = null,
        $id = null,
        $name = null,
        string $contentType = self::contentTypes['testFormOneof'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'testFormOneof'
     *
     * @param  string|null $form1 (optional)
     * @param  int|null $form2 (optional)
     * @param  string|null $form3 (optional)
     * @param  bool|null $form4 (optional)
     * @param  int|null $id (optional)
     * @param  string|null $name (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testFormOneof'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function testFormOneofRequest(
        $form1 = null,
        $form2 = null,
        $form3 = null,
        $form4 = null,
        $id = null,
        $name = null,
        string $contentType = self::contentTypes['testFormOneof'][0]
    ): Request;
}
