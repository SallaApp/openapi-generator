<?php
/**
 * QueryApiInterface
 * PHP version 8.1
 *
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Echo Server API
 *
 * Echo Server API
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: team@openapitools.org
 * @generated Generated by: https://openapi-generator.tech
 * Generator version: 7.6.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Api;

use InvalidArgumentException;
use GuzzleHttp\Psr7\Request;
use GuzzleHttp\Promise\PromiseInterface;
use OpenAPI\Client\ApiException;
use OpenAPI\Client\Configuration;

/**
 * QueryApi Class Doc Comment
 *
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
interface QueryApiInterface
{
    /** @var string[] $contentTypes **/
    public const contentTypes = [
        'testEnumRefString' => [
            'application/json',
        ],
        'testQueryDatetimeDateString' => [
            'application/json',
        ],
        'testQueryIntegerBooleanString' => [
            'application/json',
        ],
        'testQueryStyleDeepObjectExplodeTrueObject' => [
            'application/json',
        ],
        'testQueryStyleDeepObjectExplodeTrueObjectAllOf' => [
            'application/json',
        ],
        'testQueryStyleFormExplodeFalseArrayInteger' => [
            'application/json',
        ],
        'testQueryStyleFormExplodeFalseArrayString' => [
            'application/json',
        ],
        'testQueryStyleFormExplodeTrueArrayString' => [
            'application/json',
        ],
        'testQueryStyleFormExplodeTrueObject' => [
            'application/json',
        ],
        'testQueryStyleFormExplodeTrueObjectAllOf' => [
            'application/json',
        ],
    ];

    /**
     * Set the host index
     *
     * @param int $hostIndex Host index (required)
     */
    public function setHostIndex(int $hostIndex): void;

    /**
     * Get the host index
     *
     * @return int Host index
     */
    public function getHostIndex(): int;

    /**
     * @return Configuration
     */
    public function getConfig(): Configuration;

    /**
     * Operation testEnumRefString
     *
     * Test query parameter(s)
     *
     * @param  string|null $enum_nonref_string_query enum_nonref_string_query (optional)
     * @param  StringEnumRef|null $enum_ref_string_query enum_ref_string_query (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testEnumRefString'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return string
     */
    public function testEnumRefString(
        ?string $enum_nonref_string_query = null,
        ?StringEnumRef $enum_ref_string_query = null,
        string $contentType = self::contentTypes['testEnumRefString'][0]
    ): string;

    /**
     * Operation testEnumRefStringWithHttpInfo
     *
     * Test query parameter(s)
     *
     * @param  string|null $enum_nonref_string_query (optional)
     * @param  StringEnumRef|null $enum_ref_string_query (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testEnumRefString'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of string, HTTP status code, HTTP response headers (array of strings)
     */
    public function testEnumRefStringWithHttpInfo(
        ?string $enum_nonref_string_query = null,
        ?StringEnumRef $enum_ref_string_query = null,
        string $contentType = self::contentTypes['testEnumRefString'][0]
    ): array;

    /**
     * Operation testEnumRefStringAsync
     *
     * Test query parameter(s)
     *
     * @param  string|null $enum_nonref_string_query (optional)
     * @param  StringEnumRef|null $enum_ref_string_query (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testEnumRefString'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testEnumRefStringAsync(
        ?string $enum_nonref_string_query = null,
        ?StringEnumRef $enum_ref_string_query = null,
        string $contentType = self::contentTypes['testEnumRefString'][0]
    ): PromiseInterface;

    /**
     * Operation testEnumRefStringAsyncWithHttpInfo
     *
     * Test query parameter(s)
     *
     * @param  string|null $enum_nonref_string_query (optional)
     * @param  StringEnumRef|null $enum_ref_string_query (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testEnumRefString'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testEnumRefStringAsyncWithHttpInfo(
        $enum_nonref_string_query = null,
        $enum_ref_string_query = null,
        string $contentType = self::contentTypes['testEnumRefString'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'testEnumRefString'
     *
     * @param  string|null $enum_nonref_string_query (optional)
     * @param  StringEnumRef|null $enum_ref_string_query (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testEnumRefString'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function testEnumRefStringRequest(
        $enum_nonref_string_query = null,
        $enum_ref_string_query = null,
        string $contentType = self::contentTypes['testEnumRefString'][0]
    ): Request;
    /**
     * Operation testQueryDatetimeDateString
     *
     * Test query parameter(s)
     *
     * @param  \DateTime|null $datetime_query datetime_query (optional)
     * @param  \DateTime|null $date_query date_query (optional)
     * @param  string|null $string_query string_query (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryDatetimeDateString'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return string
     */
    public function testQueryDatetimeDateString(
        ?\DateTime $datetime_query = null,
        ?\DateTime $date_query = null,
        ?string $string_query = null,
        string $contentType = self::contentTypes['testQueryDatetimeDateString'][0]
    ): string;

    /**
     * Operation testQueryDatetimeDateStringWithHttpInfo
     *
     * Test query parameter(s)
     *
     * @param  \DateTime|null $datetime_query (optional)
     * @param  \DateTime|null $date_query (optional)
     * @param  string|null $string_query (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryDatetimeDateString'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of string, HTTP status code, HTTP response headers (array of strings)
     */
    public function testQueryDatetimeDateStringWithHttpInfo(
        ?\DateTime $datetime_query = null,
        ?\DateTime $date_query = null,
        ?string $string_query = null,
        string $contentType = self::contentTypes['testQueryDatetimeDateString'][0]
    ): array;

    /**
     * Operation testQueryDatetimeDateStringAsync
     *
     * Test query parameter(s)
     *
     * @param  \DateTime|null $datetime_query (optional)
     * @param  \DateTime|null $date_query (optional)
     * @param  string|null $string_query (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryDatetimeDateString'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testQueryDatetimeDateStringAsync(
        ?\DateTime $datetime_query = null,
        ?\DateTime $date_query = null,
        ?string $string_query = null,
        string $contentType = self::contentTypes['testQueryDatetimeDateString'][0]
    ): PromiseInterface;

    /**
     * Operation testQueryDatetimeDateStringAsyncWithHttpInfo
     *
     * Test query parameter(s)
     *
     * @param  \DateTime|null $datetime_query (optional)
     * @param  \DateTime|null $date_query (optional)
     * @param  string|null $string_query (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryDatetimeDateString'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testQueryDatetimeDateStringAsyncWithHttpInfo(
        $datetime_query = null,
        $date_query = null,
        $string_query = null,
        string $contentType = self::contentTypes['testQueryDatetimeDateString'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'testQueryDatetimeDateString'
     *
     * @param  \DateTime|null $datetime_query (optional)
     * @param  \DateTime|null $date_query (optional)
     * @param  string|null $string_query (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryDatetimeDateString'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function testQueryDatetimeDateStringRequest(
        $datetime_query = null,
        $date_query = null,
        $string_query = null,
        string $contentType = self::contentTypes['testQueryDatetimeDateString'][0]
    ): Request;
    /**
     * Operation testQueryIntegerBooleanString
     *
     * Test query parameter(s)
     *
     * @param  int|null $integer_query integer_query (optional)
     * @param  bool|null $boolean_query boolean_query (optional)
     * @param  string|null $string_query string_query (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryIntegerBooleanString'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return string
     */
    public function testQueryIntegerBooleanString(
        ?int $integer_query = null,
        ?bool $boolean_query = null,
        ?string $string_query = null,
        string $contentType = self::contentTypes['testQueryIntegerBooleanString'][0]
    ): string;

    /**
     * Operation testQueryIntegerBooleanStringWithHttpInfo
     *
     * Test query parameter(s)
     *
     * @param  int|null $integer_query (optional)
     * @param  bool|null $boolean_query (optional)
     * @param  string|null $string_query (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryIntegerBooleanString'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of string, HTTP status code, HTTP response headers (array of strings)
     */
    public function testQueryIntegerBooleanStringWithHttpInfo(
        ?int $integer_query = null,
        ?bool $boolean_query = null,
        ?string $string_query = null,
        string $contentType = self::contentTypes['testQueryIntegerBooleanString'][0]
    ): array;

    /**
     * Operation testQueryIntegerBooleanStringAsync
     *
     * Test query parameter(s)
     *
     * @param  int|null $integer_query (optional)
     * @param  bool|null $boolean_query (optional)
     * @param  string|null $string_query (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryIntegerBooleanString'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testQueryIntegerBooleanStringAsync(
        ?int $integer_query = null,
        ?bool $boolean_query = null,
        ?string $string_query = null,
        string $contentType = self::contentTypes['testQueryIntegerBooleanString'][0]
    ): PromiseInterface;

    /**
     * Operation testQueryIntegerBooleanStringAsyncWithHttpInfo
     *
     * Test query parameter(s)
     *
     * @param  int|null $integer_query (optional)
     * @param  bool|null $boolean_query (optional)
     * @param  string|null $string_query (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryIntegerBooleanString'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testQueryIntegerBooleanStringAsyncWithHttpInfo(
        $integer_query = null,
        $boolean_query = null,
        $string_query = null,
        string $contentType = self::contentTypes['testQueryIntegerBooleanString'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'testQueryIntegerBooleanString'
     *
     * @param  int|null $integer_query (optional)
     * @param  bool|null $boolean_query (optional)
     * @param  string|null $string_query (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryIntegerBooleanString'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function testQueryIntegerBooleanStringRequest(
        $integer_query = null,
        $boolean_query = null,
        $string_query = null,
        string $contentType = self::contentTypes['testQueryIntegerBooleanString'][0]
    ): Request;
    /**
     * Operation testQueryStyleDeepObjectExplodeTrueObject
     *
     * Test query parameter(s)
     *
     * @param  Pet|null $query_object query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleDeepObjectExplodeTrueObject'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return string
     */
    public function testQueryStyleDeepObjectExplodeTrueObject(
        ?Pet $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleDeepObjectExplodeTrueObject'][0]
    ): string;

    /**
     * Operation testQueryStyleDeepObjectExplodeTrueObjectWithHttpInfo
     *
     * Test query parameter(s)
     *
     * @param  Pet|null $query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleDeepObjectExplodeTrueObject'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of string, HTTP status code, HTTP response headers (array of strings)
     */
    public function testQueryStyleDeepObjectExplodeTrueObjectWithHttpInfo(
        ?Pet $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleDeepObjectExplodeTrueObject'][0]
    ): array;

    /**
     * Operation testQueryStyleDeepObjectExplodeTrueObjectAsync
     *
     * Test query parameter(s)
     *
     * @param  Pet|null $query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleDeepObjectExplodeTrueObject'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testQueryStyleDeepObjectExplodeTrueObjectAsync(
        ?Pet $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleDeepObjectExplodeTrueObject'][0]
    ): PromiseInterface;

    /**
     * Operation testQueryStyleDeepObjectExplodeTrueObjectAsyncWithHttpInfo
     *
     * Test query parameter(s)
     *
     * @param  Pet|null $query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleDeepObjectExplodeTrueObject'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testQueryStyleDeepObjectExplodeTrueObjectAsyncWithHttpInfo(
        $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleDeepObjectExplodeTrueObject'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'testQueryStyleDeepObjectExplodeTrueObject'
     *
     * @param  Pet|null $query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleDeepObjectExplodeTrueObject'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function testQueryStyleDeepObjectExplodeTrueObjectRequest(
        $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleDeepObjectExplodeTrueObject'][0]
    ): Request;
    /**
     * Operation testQueryStyleDeepObjectExplodeTrueObjectAllOf
     *
     * Test query parameter(s)
     *
     * @param  TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter|null $query_object query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleDeepObjectExplodeTrueObjectAllOf'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return string
     */
    public function testQueryStyleDeepObjectExplodeTrueObjectAllOf(
        ?TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleDeepObjectExplodeTrueObjectAllOf'][0]
    ): string;

    /**
     * Operation testQueryStyleDeepObjectExplodeTrueObjectAllOfWithHttpInfo
     *
     * Test query parameter(s)
     *
     * @param  TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter|null $query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleDeepObjectExplodeTrueObjectAllOf'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of string, HTTP status code, HTTP response headers (array of strings)
     */
    public function testQueryStyleDeepObjectExplodeTrueObjectAllOfWithHttpInfo(
        ?TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleDeepObjectExplodeTrueObjectAllOf'][0]
    ): array;

    /**
     * Operation testQueryStyleDeepObjectExplodeTrueObjectAllOfAsync
     *
     * Test query parameter(s)
     *
     * @param  TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter|null $query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleDeepObjectExplodeTrueObjectAllOf'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testQueryStyleDeepObjectExplodeTrueObjectAllOfAsync(
        ?TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleDeepObjectExplodeTrueObjectAllOf'][0]
    ): PromiseInterface;

    /**
     * Operation testQueryStyleDeepObjectExplodeTrueObjectAllOfAsyncWithHttpInfo
     *
     * Test query parameter(s)
     *
     * @param  TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter|null $query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleDeepObjectExplodeTrueObjectAllOf'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testQueryStyleDeepObjectExplodeTrueObjectAllOfAsyncWithHttpInfo(
        $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleDeepObjectExplodeTrueObjectAllOf'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'testQueryStyleDeepObjectExplodeTrueObjectAllOf'
     *
     * @param  TestQueryStyleDeepObjectExplodeTrueObjectAllOfQueryObjectParameter|null $query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleDeepObjectExplodeTrueObjectAllOf'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function testQueryStyleDeepObjectExplodeTrueObjectAllOfRequest(
        $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleDeepObjectExplodeTrueObjectAllOf'][0]
    ): Request;
    /**
     * Operation testQueryStyleFormExplodeFalseArrayInteger
     *
     * Test query parameter(s)
     *
     * @param  int[]|null $query_object query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleFormExplodeFalseArrayInteger'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return string
     */
    public function testQueryStyleFormExplodeFalseArrayInteger(
        ?array $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleFormExplodeFalseArrayInteger'][0]
    ): string;

    /**
     * Operation testQueryStyleFormExplodeFalseArrayIntegerWithHttpInfo
     *
     * Test query parameter(s)
     *
     * @param  int[]|null $query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleFormExplodeFalseArrayInteger'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of string, HTTP status code, HTTP response headers (array of strings)
     */
    public function testQueryStyleFormExplodeFalseArrayIntegerWithHttpInfo(
        ?array $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleFormExplodeFalseArrayInteger'][0]
    ): array;

    /**
     * Operation testQueryStyleFormExplodeFalseArrayIntegerAsync
     *
     * Test query parameter(s)
     *
     * @param  int[]|null $query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleFormExplodeFalseArrayInteger'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testQueryStyleFormExplodeFalseArrayIntegerAsync(
        ?array $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleFormExplodeFalseArrayInteger'][0]
    ): PromiseInterface;

    /**
     * Operation testQueryStyleFormExplodeFalseArrayIntegerAsyncWithHttpInfo
     *
     * Test query parameter(s)
     *
     * @param  int[]|null $query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleFormExplodeFalseArrayInteger'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testQueryStyleFormExplodeFalseArrayIntegerAsyncWithHttpInfo(
        $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleFormExplodeFalseArrayInteger'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'testQueryStyleFormExplodeFalseArrayInteger'
     *
     * @param  int[]|null $query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleFormExplodeFalseArrayInteger'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function testQueryStyleFormExplodeFalseArrayIntegerRequest(
        $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleFormExplodeFalseArrayInteger'][0]
    ): Request;
    /**
     * Operation testQueryStyleFormExplodeFalseArrayString
     *
     * Test query parameter(s)
     *
     * @param  string[]|null $query_object query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleFormExplodeFalseArrayString'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return string
     */
    public function testQueryStyleFormExplodeFalseArrayString(
        ?array $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleFormExplodeFalseArrayString'][0]
    ): string;

    /**
     * Operation testQueryStyleFormExplodeFalseArrayStringWithHttpInfo
     *
     * Test query parameter(s)
     *
     * @param  string[]|null $query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleFormExplodeFalseArrayString'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of string, HTTP status code, HTTP response headers (array of strings)
     */
    public function testQueryStyleFormExplodeFalseArrayStringWithHttpInfo(
        ?array $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleFormExplodeFalseArrayString'][0]
    ): array;

    /**
     * Operation testQueryStyleFormExplodeFalseArrayStringAsync
     *
     * Test query parameter(s)
     *
     * @param  string[]|null $query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleFormExplodeFalseArrayString'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testQueryStyleFormExplodeFalseArrayStringAsync(
        ?array $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleFormExplodeFalseArrayString'][0]
    ): PromiseInterface;

    /**
     * Operation testQueryStyleFormExplodeFalseArrayStringAsyncWithHttpInfo
     *
     * Test query parameter(s)
     *
     * @param  string[]|null $query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleFormExplodeFalseArrayString'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testQueryStyleFormExplodeFalseArrayStringAsyncWithHttpInfo(
        $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleFormExplodeFalseArrayString'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'testQueryStyleFormExplodeFalseArrayString'
     *
     * @param  string[]|null $query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleFormExplodeFalseArrayString'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function testQueryStyleFormExplodeFalseArrayStringRequest(
        $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleFormExplodeFalseArrayString'][0]
    ): Request;
    /**
     * Operation testQueryStyleFormExplodeTrueArrayString
     *
     * Test query parameter(s)
     *
     * @param  TestQueryStyleFormExplodeTrueArrayStringQueryObjectParameter|null $query_object query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleFormExplodeTrueArrayString'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return string
     */
    public function testQueryStyleFormExplodeTrueArrayString(
        ?TestQueryStyleFormExplodeTrueArrayStringQueryObjectParameter $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleFormExplodeTrueArrayString'][0]
    ): string;

    /**
     * Operation testQueryStyleFormExplodeTrueArrayStringWithHttpInfo
     *
     * Test query parameter(s)
     *
     * @param  TestQueryStyleFormExplodeTrueArrayStringQueryObjectParameter|null $query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleFormExplodeTrueArrayString'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of string, HTTP status code, HTTP response headers (array of strings)
     */
    public function testQueryStyleFormExplodeTrueArrayStringWithHttpInfo(
        ?TestQueryStyleFormExplodeTrueArrayStringQueryObjectParameter $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleFormExplodeTrueArrayString'][0]
    ): array;

    /**
     * Operation testQueryStyleFormExplodeTrueArrayStringAsync
     *
     * Test query parameter(s)
     *
     * @param  TestQueryStyleFormExplodeTrueArrayStringQueryObjectParameter|null $query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleFormExplodeTrueArrayString'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testQueryStyleFormExplodeTrueArrayStringAsync(
        ?TestQueryStyleFormExplodeTrueArrayStringQueryObjectParameter $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleFormExplodeTrueArrayString'][0]
    ): PromiseInterface;

    /**
     * Operation testQueryStyleFormExplodeTrueArrayStringAsyncWithHttpInfo
     *
     * Test query parameter(s)
     *
     * @param  TestQueryStyleFormExplodeTrueArrayStringQueryObjectParameter|null $query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleFormExplodeTrueArrayString'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testQueryStyleFormExplodeTrueArrayStringAsyncWithHttpInfo(
        $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleFormExplodeTrueArrayString'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'testQueryStyleFormExplodeTrueArrayString'
     *
     * @param  TestQueryStyleFormExplodeTrueArrayStringQueryObjectParameter|null $query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleFormExplodeTrueArrayString'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function testQueryStyleFormExplodeTrueArrayStringRequest(
        $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleFormExplodeTrueArrayString'][0]
    ): Request;
    /**
     * Operation testQueryStyleFormExplodeTrueObject
     *
     * Test query parameter(s)
     *
     * @param  Pet|null $query_object query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleFormExplodeTrueObject'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return string
     */
    public function testQueryStyleFormExplodeTrueObject(
        ?Pet $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleFormExplodeTrueObject'][0]
    ): string;

    /**
     * Operation testQueryStyleFormExplodeTrueObjectWithHttpInfo
     *
     * Test query parameter(s)
     *
     * @param  Pet|null $query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleFormExplodeTrueObject'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of string, HTTP status code, HTTP response headers (array of strings)
     */
    public function testQueryStyleFormExplodeTrueObjectWithHttpInfo(
        ?Pet $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleFormExplodeTrueObject'][0]
    ): array;

    /**
     * Operation testQueryStyleFormExplodeTrueObjectAsync
     *
     * Test query parameter(s)
     *
     * @param  Pet|null $query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleFormExplodeTrueObject'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testQueryStyleFormExplodeTrueObjectAsync(
        ?Pet $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleFormExplodeTrueObject'][0]
    ): PromiseInterface;

    /**
     * Operation testQueryStyleFormExplodeTrueObjectAsyncWithHttpInfo
     *
     * Test query parameter(s)
     *
     * @param  Pet|null $query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleFormExplodeTrueObject'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testQueryStyleFormExplodeTrueObjectAsyncWithHttpInfo(
        $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleFormExplodeTrueObject'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'testQueryStyleFormExplodeTrueObject'
     *
     * @param  Pet|null $query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleFormExplodeTrueObject'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function testQueryStyleFormExplodeTrueObjectRequest(
        $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleFormExplodeTrueObject'][0]
    ): Request;
    /**
     * Operation testQueryStyleFormExplodeTrueObjectAllOf
     *
     * Test query parameter(s)
     *
     * @param  DataQuery|null $query_object query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleFormExplodeTrueObjectAllOf'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return string
     */
    public function testQueryStyleFormExplodeTrueObjectAllOf(
        ?DataQuery $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleFormExplodeTrueObjectAllOf'][0]
    ): string;

    /**
     * Operation testQueryStyleFormExplodeTrueObjectAllOfWithHttpInfo
     *
     * Test query parameter(s)
     *
     * @param  DataQuery|null $query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleFormExplodeTrueObjectAllOf'] to see the possible values for this operation
     *
     * @throws ApiException on non-2xx response or if the response body is not in the expected format
     * @throws InvalidArgumentException
     * @return array of string, HTTP status code, HTTP response headers (array of strings)
     */
    public function testQueryStyleFormExplodeTrueObjectAllOfWithHttpInfo(
        ?DataQuery $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleFormExplodeTrueObjectAllOf'][0]
    ): array;

    /**
     * Operation testQueryStyleFormExplodeTrueObjectAllOfAsync
     *
     * Test query parameter(s)
     *
     * @param  DataQuery|null $query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleFormExplodeTrueObjectAllOf'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testQueryStyleFormExplodeTrueObjectAllOfAsync(
        ?DataQuery $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleFormExplodeTrueObjectAllOf'][0]
    ): PromiseInterface;

    /**
     * Operation testQueryStyleFormExplodeTrueObjectAllOfAsyncWithHttpInfo
     *
     * Test query parameter(s)
     *
     * @param  DataQuery|null $query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleFormExplodeTrueObjectAllOf'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return PromiseInterface
     */
    public function testQueryStyleFormExplodeTrueObjectAllOfAsyncWithHttpInfo(
        $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleFormExplodeTrueObjectAllOf'][0]
    ): PromiseInterface;

    /**
     * Create request for operation 'testQueryStyleFormExplodeTrueObjectAllOf'
     *
     * @param  DataQuery|null $query_object (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['testQueryStyleFormExplodeTrueObjectAllOf'] to see the possible values for this operation
     *
     * @throws InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function testQueryStyleFormExplodeTrueObjectAllOfRequest(
        $query_object = null,
        string $contentType = self::contentTypes['testQueryStyleFormExplodeTrueObjectAllOf'][0]
    ): Request;
}
